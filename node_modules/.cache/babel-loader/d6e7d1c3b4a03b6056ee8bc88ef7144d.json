{"ast":null,"code":"import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { fetchContactRequest, fetchContactSuccess, fetchContactError, addContactRequest, addContactSuccess, addContactError, removeContactRequest, removeContactSuccess, removeContactError } from './contacts-actions';\naxios.defaults.daseURL = 'http://localhost:3030';\n\nconst fetchContact = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  } // axios\n  //     .get('/contacts')\n  //     .then(({data}) => \n  //         dispatch(fetchContactSuccess(data)))\n  //     .catch(error => dispatch(fetchContactError(error.message)))\n\n};\n\nconst addContact = (name, number, message) => dispatch => {\n  const contact = {\n    id: uuidv4(),\n    name,\n    number,\n    message\n  };\n  dispatch(addContactRequest());\n  axios.post('/contacts', contact).then(({\n    data\n  }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error.message)));\n};\n\nconst removeContact = contactId => dispatch => {\n  dispatch(removeContactRequest());\n  axios.delete(`/contacts/${contactId}`).then(() => dispatch(removeContactSuccess(contactId))).catch(error => dispatch(removeContactError(error.message)));\n};\n\nexport default {\n  fetchContact,\n  addContact,\n  removeContact\n};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-07-phonebook/src/redux/contacts-operations.js"],"names":["axios","v4","uuidv4","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","defaults","daseURL","fetchContact","dispatch","data","get","error","message","addContact","name","number","contact","id","post","then","catch","removeContact","contactId","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,EAIIC,iBAJJ,EAKIC,iBALJ,EAMIC,eANJ,EAOIC,oBAPJ,EAQIC,oBARJ,EASIC,kBATJ,QAUO,oBAVP;AAYAX,KAAK,CAACY,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACzCA,EAAAA,QAAQ,CAACZ,mBAAmB,EAApB,CAAR;;AAEA,MAAI;AACA,UAAM;AAACa,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAU,WAAV,CAArB;AAEAF,IAAAA,QAAQ,CAACX,mBAAmB,CAACY,IAAD,CAApB,CAAR;AACH,GAJD,CAIE,OAAOE,KAAP,EAAc;AACZH,IAAAA,QAAQ,CAACV,iBAAiB,CAACa,KAAK,CAACC,OAAP,CAAlB,CAAR;AACH,GATwC,CAWzC;AACA;AACA;AACA;AACA;;AAEH,CAjBD;;AAmBA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAMC,MAAN,EAAaH,OAAb,KAAyBJ,QAAQ,IAAI;AACpD,QAAMQ,OAAO,GAAG;AACZC,IAAAA,EAAE,EAAEtB,MAAM,EADE;AAEZmB,IAAAA,IAFY;AAGZC,IAAAA,MAHY;AAIZH,IAAAA;AAJY,GAAhB;AAOAJ,EAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AAEAN,EAAAA,KAAK,CACAyB,IADL,CACU,WADV,EACuBF,OADvB,EAEKG,IAFL,CAEU,CAAC;AAAEV,IAAAA;AAAF,GAAD,KACFD,QAAQ,CAACR,iBAAiB,CAACS,IAAD,CAAlB,CAHhB,EAIKW,KAJL,CAIWT,KAAK,IAAIH,QAAQ,CAACP,eAAe,CAACU,KAAK,CAACC,OAAP,CAAhB,CAJ5B;AAKC,CAfL;;AAkBA,MAAMS,aAAa,GAAGC,SAAS,IAAId,QAAQ,IAAI;AAC3CA,EAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AAEAT,EAAAA,KAAK,CACA8B,MADL,CACa,aAAYD,SAAU,EADnC,EAEKH,IAFL,CAEU,MAAMX,QAAQ,CAACL,oBAAoB,CAACmB,SAAD,CAArB,CAFxB,EAGKF,KAHL,CAGWT,KAAK,IAAIH,QAAQ,CAACJ,kBAAkB,CAACO,KAAK,CAACC,OAAP,CAAnB,CAH5B;AAIH,CAPD;;AAQI,eAAe;AACXL,EAAAA,YADW;AAEXM,EAAAA,UAFW;AAGXQ,EAAAA;AAHW,CAAf","sourcesContent":["import axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { \r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError, \r\n    addContactRequest, \r\n    addContactSuccess, \r\n    addContactError, \r\n    removeContactRequest, \r\n    removeContactSuccess, \r\n    removeContactError \r\n} from './contacts-actions'\r\n\r\naxios.defaults.daseURL = 'http://localhost:3030';\r\n\r\nconst fetchContact = () => async dispatch => {\r\n    dispatch(fetchContactRequest());\r\n\r\n    try {\r\n        const {data} = await axios.get('/contacts');\r\n\r\n        dispatch(fetchContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error.message))\r\n    }\r\n\r\n    // axios\r\n    //     .get('/contacts')\r\n    //     .then(({data}) => \r\n    //         dispatch(fetchContactSuccess(data)))\r\n    //     .catch(error => dispatch(fetchContactError(error.message)))\r\n\r\n}\r\n\r\nconst addContact = (name,number,message) => dispatch => {\r\n    const contact = {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n        message\r\n    };\r\n\r\n    dispatch(addContactRequest())\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => \r\n            dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error.message)))\r\n    }\r\n\r\n\r\nconst removeContact = contactId => dispatch => {\r\n    dispatch(removeContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(removeContactSuccess(contactId)))\r\n        .catch(error => dispatch(removeContactError(error.message)))\r\n}\r\n    export default {\r\n        fetchContact,\r\n        addContact,\r\n        removeContact\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}