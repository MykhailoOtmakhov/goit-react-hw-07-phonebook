{"ast":null,"code":"import { combineReducers } from 'redux';\nimport types from './contacts-types';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst items = (state = [], {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.REMOVE:\n      return state.filter(({\n        id\n      }) => id !== payload);\n\n    default:\n      return state;\n  }\n}; // const items = createReducer([], {\n//     [actions.addContact]: (state,{payload}) => [...state, payload],\n//     [actions.removeContact]: (state,{payload}) => state.filter(({id})=>id !== payload),\n// })\n\n\nconst filter = (state = '', {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter\n}); // import { combineReducers } from \"redux\"\n// import { createReducer } from '@reduxjs/toolkit'\n// // import types from './contacts-types';\n// import actions from './contacts-actions'\n// const items = createReducer([], {\n//     [actions.addContact]: (state,{payload}) => [...state, payload],\n//     [actions.removeContact]: (state,{payload}) => state.filter(({id})=>id !== payload),\n// })\n// // const items = (state = [], {type, payload}) => {\n// //     switch (type) {\n// //         case types.ADD:\n// //             return [...state, payload];            \n// //         case types.REMOVE:\n// //             return state.filter(({id})=>id !== payload);\n// //         default:\n// //             return state;\n// //     }\n// // }\n// const filter = createReducer('', {\n//     [actions.changeFilter]: (_, {payload}) => payload,\n// })\n// // const filter = (state = '', {type, payload}) => {\n// //     switch (type) {\n// //         case 'contacts/ChangeFilter':\n// //             return payload;\n// //         default :\n// //             return state;            \n// //     }\n// // }\n// export default combineReducers({\n//     items,\n//     filter\n// })","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","types","createReducer","items","state","type","payload","ADD","REMOVE","filter","id","CHANGE_FILTER"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAGA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAE,EAAR,EAAY;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAZ,KAAkC;AAC5C,UAAQD,IAAR;AACI,SAAKJ,KAAK,CAACM,GAAX;AACI,aAAO,CAAC,GAAGH,KAAJ,EAAWE,OAAX,CAAP;;AAEJ,SAAKL,KAAK,CAACO,MAAX;AACI,aAAOJ,KAAK,CAACK,MAAN,CAAa,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,EAAE,KAAKJ,OAA9B,CAAP;;AAEJ;AAAS,aAAOF,KAAP;AAPb;AAQH,CATD,C,CAWA;AACA;AACA;AACA;;;AAEA,MAAMK,MAAM,GAAG,CAACL,KAAK,GAAG,EAAT,EAAa;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAb,KAAiC;AAC5C,UAAQD,IAAR;AACI,SAAKJ,KAAK,CAACU,aAAX;AACI,aAAOL,OAAP;;AAEJ;AAAU,aAAOF,KAAP;AAJd;AAMH,CAPD;;AASA,eAAeJ,eAAe,CAAC;AAC3BG,EAAAA,KAD2B;AAE3BM,EAAAA;AAF2B,CAAD,CAA9B,C,CAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from 'redux'\r\nimport types from './contacts-types'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\n\r\nconst items = (state =[], { type, payload }) => {\r\n    switch (type) {\r\n        case types.ADD:\r\n            return [...state, payload];            \r\n\r\n        case types.REMOVE:\r\n            return state.filter(({id}) => id !== payload);\r\n\r\n        default: return state;}\r\n}\r\n\r\n// const items = createReducer([], {\r\n//     [actions.addContact]: (state,{payload}) => [...state, payload],\r\n//     [actions.removeContact]: (state,{payload}) => state.filter(({id})=>id !== payload),\r\n// })\r\n\r\nconst filter = (state = '', {type, payload}) => {\r\n    switch (type) {\r\n        case types.CHANGE_FILTER:\r\n            return payload;\r\n\r\n        default : return state;            \r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})\r\n\r\n// import { combineReducers } from \"redux\"\r\n// import { createReducer } from '@reduxjs/toolkit'\r\n// // import types from './contacts-types';\r\n// import actions from './contacts-actions'\r\n\r\n// const items = createReducer([], {\r\n//     [actions.addContact]: (state,{payload}) => [...state, payload],\r\n//     [actions.removeContact]: (state,{payload}) => state.filter(({id})=>id !== payload),\r\n// })\r\n\r\n// // const items = (state = [], {type, payload}) => {\r\n// //     switch (type) {\r\n// //         case types.ADD:\r\n// //             return [...state, payload];            \r\n    \r\n// //         case types.REMOVE:\r\n// //             return state.filter(({id})=>id !== payload);\r\n\r\n// //         default:\r\n// //             return state;\r\n// //     }\r\n// // }\r\n\r\n// const filter = createReducer('', {\r\n//     [actions.changeFilter]: (_, {payload}) => payload,\r\n// })\r\n\r\n// // const filter = (state = '', {type, payload}) => {\r\n// //     switch (type) {\r\n// //         case 'contacts/ChangeFilter':\r\n// //             return payload;\r\n// //         default :\r\n// //             return state;            \r\n// //     }\r\n// // }\r\n\r\n// export default combineReducers({\r\n//     items,\r\n//     filter\r\n// })"]},"metadata":{},"sourceType":"module"}