{"ast":null,"code":"import{createSelector}from'@reduxjs/toolkit';var getLoading=function getLoading(state){return state.contacts.loading;};var getFilter=function getFilter(state){return state.contacts.filter;};var getAllContacts=function getAllContacts(state){return state.contacts.items;};var getVisibleContacts=createSelector([getAllContacts,getFilter],function(allContacts,filter){var normalizedFilter=filter.toLowerCase();return allContacts.filter(function(_ref){var name=_ref.name;return name.toLowerCase().includes(normalizedFilter);});});export default{getLoading:getLoading,getFilter:getFilter,getVisibleContacts:getVisibleContacts};// const getVisibleContacts = state => {\n//     const allContacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n//     return allContacts.filter(({name})=>\n//         name.toLowerCase().includes(normalizedFilter),\n//     )\n// }","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-07-phonebook/src/redux/contacts-selectors.js"],"names":["createSelector","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","name","includes"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeC,OAAnB,EAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAH,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeG,MAAnB,EAAvB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAL,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeK,KAAnB,EAA5B,CAEA,GAAMC,CAAAA,kBAAkB,CAAGT,cAAc,CACrC,CAACO,cAAD,CAAiBF,SAAjB,CADqC,CAErC,SAACK,WAAD,CAAcJ,MAAd,CAAyB,CACrB,GAAMK,CAAAA,gBAAgB,CAAGL,MAAM,CAACM,WAAP,EAAzB,CAEA,MAAOF,CAAAA,WAAW,CAACJ,MAAZ,CAAmB,kBAAEO,CAAAA,IAAF,MAAEA,IAAF,OACtBA,CAAAA,IAAI,CAACD,WAAL,GAAmBE,QAAnB,CAA4BH,gBAA5B,CADsB,EAAnB,CAAP,CAGH,CARoC,CAAzC,CAWA,cAAe,CACXV,UAAU,CAAVA,UADW,CAEXI,SAAS,CAATA,SAFW,CAGXI,kBAAkB,CAAlBA,kBAHW,CAAf,CAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (allContacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        \r\n        return allContacts.filter(({name})=>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        )\r\n    }\r\n)\r\n\r\nexport default {\r\n    getLoading,\r\n    getFilter,\r\n    getVisibleContacts\r\n}\r\n\r\n// const getVisibleContacts = state => {\r\n//     const allContacts = getAllContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return allContacts.filter(({name})=>\r\n//         name.toLowerCase().includes(normalizedFilter),\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}