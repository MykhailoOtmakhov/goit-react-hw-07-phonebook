{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\nimport Header from './components/Header/Header.js'; // import Notification from './components/Notification/Notification'\n\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showNoty: false\n    };\n\n    this.formSubmitHandler = data => {\n      console.log(data);\n    };\n  }\n\n  render() {\n    const {\n      showNoty,\n      contacts,\n      items\n    } = this.state; // const visibleContacts = this.getVisibleContacts();\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm // onSubmit={this.addContact}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: this.props.contacts.length > 1,\n        timeout: 250,\n        classNames: \"container\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Filter // value={filter}\n        // onChange={this.changeFilter}\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contacts // contacts={visibleContacts}\n      // onRemoveContact={this.removeContact} \n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  showNoty: PropTypes.bool\n};\nApp.defaultProps = {\n  contacts: [],\n  filter: '',\n  showNoty: false\n}; // export default App\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items\n});\n\nexport default connect(mapStateToProps, null)(App);","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/App.js"],"names":["React","Component","ContactForm","Contacts","Filter","CSSTransition","Header","PropTypes","App","state","showNoty","formSubmitHandler","data","console","log","render","contacts","items","props","length","propTypes","array","filter","string","bool","defaultProps","mapStateToProps","connect"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,+BAAnB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAG1BQ,KAH0B,GAGlB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAHkB;;AAAA,SAwB1BC,iBAxB0B,GAwBRC,IAAI,IAAE;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KA1ByB;AAAA;;AA4B1BG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACL,MAAAA,QAAD;AAAUM,MAAAA,QAAV;AAAmBC,MAAAA;AAAnB,QAA0B,KAAKR,KAArC,CADO,CAEP;;AACA,wBACE;AAAA,8BAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,WAAD,CACE;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAYE,QAAC,aAAD;AACE,QAAA,EAAE,EAAE,KAAKS,KAAL,CAAWF,QAAX,CAAoBG,MAApB,GAA2B,CADjC;AAEE,QAAA,OAAO,EAAE,GAFX;AAGE,QAAA,UAAU,EAAC,WAHb;AAIE,QAAA,aAAa,MAJf;AAAA,+BAKI,QAAC,MAAD,CACE;AACA;AAFF;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAZF,eA2BM,QAAC,QAAD,CACE;AACA;AAFF;AAAA;AAAA;AAAA;AAAA,cA3BN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmCD;;AAlEyB;;AAqE5BX,GAAG,CAACY,SAAJ,GAAc;AACZJ,EAAAA,QAAQ,EAACT,SAAS,CAACc,KADP;AAEZC,EAAAA,MAAM,EAACf,SAAS,CAACgB,MAFL;AAGZb,EAAAA,QAAQ,EAACH,SAAS,CAACiB;AAHP,CAAd;AAMAhB,GAAG,CAACiB,YAAJ,GAAmB;AACjBT,EAAAA,QAAQ,EAAE,EADO;AAEjBM,EAAAA,MAAM,EAAE,EAFS;AAGjBZ,EAAAA,QAAQ,EAAE;AAHO,CAAnB,C,CAMA;;AACA,MAAMgB,eAAe,GAAIjB,KAAD,KAAY;AAClCO,EAAAA,QAAQ,EAAEP,KAAK,CAACO,QAAN,CAAeC;AADS,CAAZ,CAAxB;;AAIA,eAAeU,OAAO,CAACD,eAAD,EAAkB,IAAlB,CAAP,CAA+BlB,GAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Contacts from './components/Contacts/Contacts';\r\nimport Filter from './components/Filter/Filter';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport './App.css'\r\nimport Header from './components/Header/Header.js';\r\n// import Notification from './components/Notification/Notification'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass App extends Component {\r\n  // static defaultProps = {}\r\n  \r\n  state = {\r\n    showNoty: false,\r\n  }\r\n\r\n  // addContact=({name, number})=>{\r\n  //   const contact = {\r\n  //     id: uuidv4(),\r\n  //     name: name,\r\n  //     number: number,\r\n  //   };\r\n\r\n  //   if (this.state.contacts.find((item)=>item.name===name)) {\r\n  //     this.setState({showNoty: true})\r\n  //       setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n  //   } else {\r\n  //     this.setState(prevState=>({\r\n  //       contacts: [contact, ...prevState.contacts],\r\n  //     }))\r\n  //   }\r\n  // }    \r\n\r\n  formSubmitHandler=data=>{\r\n    console.log(data);\r\n  }\r\n\r\n  render() {\r\n    const {showNoty,contacts,items}=this.state;\r\n    // const visibleContacts = this.getVisibleContacts();\r\n    return(\r\n      <div>\r\n        {/* <CSSTransition\r\n          in={showNoty} \r\n          timeout={250}\r\n          classNames=\"notification\"\r\n          unmountOnExit>\r\n            <Notification />\r\n        </CSSTransition> */}\r\n        <Header />\r\n        <ContactForm \r\n          // onSubmit={this.addContact}\r\n        />\r\n        <CSSTransition \r\n          in={this.props.contacts.length>1}\r\n          timeout={250}\r\n          classNames=\"container\"\r\n          unmountOnExit>\r\n            <Filter \r\n              // value={filter}\r\n              // onChange={this.changeFilter}\r\n            />\r\n        </CSSTransition>\r\n        {/* <CSSTransition \r\n          in={contacts.length>0}\r\n          timeout={250}\r\n          classNames=\"container\"\r\n          unmountOnExit> */}\r\n            <Contacts \r\n              // contacts={visibleContacts}\r\n              // onRemoveContact={this.removeContact} \r\n            />\r\n        {/* </CSSTransition>        */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes={\r\n  contacts:PropTypes.array,\r\n  filter:PropTypes.string,\r\n  showNoty:PropTypes.bool,\r\n}\r\n\r\nApp.defaultProps = {\r\n  contacts: [],\r\n  filter: '',\r\n  showNoty: false,\r\n}\r\n\r\n// export default App\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(App)\r\n"]},"metadata":{},"sourceType":"module"}