{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _defineProperty from\"D:/projects/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:/projects/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/projects/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/projects/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/projects/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import styles from'./ContactForm.module.css';import{connect}from'react-redux';import contactsActions from'../../redux/contacts-actions';import Notification from'../Notification/Notification';import{CSSTransition}from'react-transition-group';var ContactForm=/*#__PURE__*/function(_Component){_inherits(ContactForm,_Component);var _super=_createSuper(ContactForm);function ContactForm(){var _this;_classCallCheck(this,ContactForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={name:'',number:'',message:null};_this.handleInputChange=function(evt){var _evt$currentTarget=evt.currentTarget,name=_evt$currentTarget.name,value=_evt$currentTarget.value;_this.setState(_defineProperty({},name,value));};_this.getNoty=function(note){_this.setState({message:note});setTimeout(function(){_this.setState({message:null});},2500);};_this.handleSubmit=function(evt){var _this$state=_this.state,name=_this$state.name,number=_this$state.number;evt.preventDefault();if(_this.props.contacts.items.find(function(item){return item.name.toLowerCase()===_this.state.name.toLowerCase();})){_this.getNoty('This contact is already exist!');return;}if(name===''){_this.getNoty('Enter the name!');return;}if(number===''){_this.getNoty('Enter the number!');return;}_this.props.onSubmit(_this.state);_this.reset();};_this.reset=function(){_this.setState({name:'',number:''});};return _this;}_createClass(ContactForm,[{key:\"render\",value:function render(){var message=this.state.message;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CSSTransition,{in:message,timeout:250,classNames:\"notification\",unmountOnExit:true,children:/*#__PURE__*/_jsx(Notification,{message:this.state.message})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmit,className:styles.form,children:[/*#__PURE__*/_jsxs(\"label\",{className:styles.label,htmlFor:this.nameInputId,children:[\"Name\",/*#__PURE__*/_jsx(\"input\",{className:styles.input,type:\"text\",name:\"name\",value:this.state.name,onChange:this.handleInputChange,id:this.nameInputId})]}),/*#__PURE__*/_jsxs(\"label\",{className:styles.label,htmlFor:this.numberInputId,children:[\"Number\",/*#__PURE__*/_jsx(\"input\",{className:styles.input,type:\"tel\",name:\"number\",value:this.state.number,onChange:this.handleInputChange,id:this.numberInputId})]}),/*#__PURE__*/_jsx(\"button\",{className:styles.button,type:\"submit\",onClick:this.handleSubmit,children:\"Add contact\"})]})]});}}]);return ContactForm;}(Component);var mapStateToProps=function mapStateToProps(state){return{contacts:state.contacts};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSubmit:function onSubmit(_ref){var name=_ref.name,number=_ref.number,message=_ref.message;return dispatch(contactsActions.addContact(name,number,message));}};};export default connect(mapStateToProps,mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","styles","connect","contactsActions","Notification","CSSTransition","ContactForm","state","name","number","message","handleInputChange","evt","currentTarget","value","setState","getNoty","note","setTimeout","handleSubmit","preventDefault","props","contacts","items","find","item","toLowerCase","onSubmit","reset","form","label","nameInputId","input","numberInputId","button","mapStateToProps","mapDispatchToProps","dispatch","addContact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts-actions'\r\nimport Notification from '../Notification/Notification'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n          name: '',\r\n          number: '',\r\n          message: null,   \r\n    }\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.currentTarget;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    getNoty = (note) => {\r\n      this.setState({message: note});\r\n      setTimeout(()=> {\r\n        this.setState({ message: null});\r\n      }, 2500)\r\n    }\r\n\r\n    handleSubmit=evt=>{\r\n        const { name, number } = this.state;\r\n        evt.preventDefault();\r\n\r\n        if (this.props.contacts.items.find((item) => item.name.toLowerCase() === this.state.name.toLowerCase())) {\r\n          this.getNoty('This contact is already exist!');\r\n          return;\r\n        }\r\n        \r\n        if (name ===''){\r\n          this.getNoty('Enter the name!');\r\n          return;\r\n        }\r\n\r\n        if (number ===''){\r\n          this.getNoty('Enter the number!');\r\n          return;\r\n        }\r\n\r\n        this.props.onSubmit(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({name: '', number: '',});\r\n    }\r\n    \r\n    render() {\r\n      const { message }= this.state;\r\n        return (\r\n          <div>\r\n            <CSSTransition\r\n              in={message} \r\n              timeout={250}\r\n              classNames=\"notification\"\r\n              unmountOnExit>\r\n                <Notification message={this.state.message}/>\r\n            </CSSTransition>\r\n            <form \r\n              onSubmit={this.handleSubmit}\r\n              className={styles.form}>\r\n              <label \r\n                className={styles.label}\r\n                htmlFor={this.nameInputId}>\r\n                    Name\r\n                <input \r\n                  className={styles.input}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange}\r\n                  id={this.nameInputId}\r\n                />\r\n              </label>\r\n              <label \r\n              className={styles.label}\r\n              htmlFor={this.numberInputId}>\r\n                  Number\r\n                <input \r\n                  className={styles.input}\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  value={this.state.number}\r\n                  onChange={this.handleInputChange}\r\n                  id={this.numberInputId}\r\n                />\r\n              </label>\r\n              <button \r\n                className={styles.button}\r\n                type=\"submit\" \r\n                onClick={this.handleSubmit}\r\n              >\r\n                Add contact\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({name,number,message}) => dispatch(contactsActions.addContact(name,number,message))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n\r\n"]},"metadata":{},"sourceType":"module"}