{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-07-phonebook\\\\src\\\\components\\\\Contacts\\\\Contacts.js\";\nimport React from 'react';\nimport ContactsItem from '../ContactsItem/ContactsItem';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styles from './Contacts.module.css';\nimport { connect } from 'react-redux';\nimport contactsOperations from '../../redux/contacts-operations';\nimport changeFilter from '../../redux/contacts-actions';\n\nconst Contacts = ({\n  contacts,\n  onRemoveContact,\n  clearFilter\n}) => {\n  const handleRemoveContact = id => {\n    onRemoveContact(id);\n    clearFilter();\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransitionGroup, {\n    component: \"ul\",\n    className: \"ContactsList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), contacts.map(({\n      id,\n      name,\n      number\n    }) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n      timeout: 2500,\n      classNames: styles,\n      children: /*#__PURE__*/_jsxDEV(ContactsItem, {\n        id: id,\n        name: name,\n        number: number,\n        onRemove: () => handleRemoveContact(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Contacts;\nContacts.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({\n    name\n  }) => name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({\n  contacts: {\n    items,\n    filter\n  }\n}) => ({\n  contacts: getVisibleContacts(items, filter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveContact: id => dispatch(contactsOperations.removeContact(id)),\n  clearFilter: () => dispatch(changeFilter.changeFilter(''))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-07-phonebook/src/components/Contacts/Contacts.js"],"names":["React","ContactsItem","PropTypes","CSSTransition","TransitionGroup","styles","connect","contactsOperations","changeFilter","Contacts","contacts","onRemoveContact","clearFilter","handleRemoveContact","id","map","name","number","propTypes","string","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","mapStateToProps","items","mapDispatchToProps","dispatch","removeContact"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,eAAV;AAA0BC,EAAAA;AAA1B,CAAD,KAA4C;AAEzD,QAAMC,mBAAmB,GAAGC,EAAE,IAAI;AAC9BH,IAAAA,eAAe,CAACG,EAAD,CAAf;AACAF,IAAAA,WAAW;AACd,GAHD;;AAKA,sBACI,QAAC,eAAD;AACI,IAAA,SAAS,EAAC,IADd;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA,4BAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,EAKSF,QAAQ,CAACK,GAAT,CAAa,CAAC;AAACD,MAAAA,EAAD;AAAIE,MAAAA,IAAJ;AAASC,MAAAA;AAAT,KAAD,kBACV,QAAC,aAAD;AAEI,MAAA,OAAO,EAAE,IAFb;AAGI,MAAA,UAAU,EAAEZ,MAHhB;AAAA,6BAKI,QAAC,YAAD;AACI,QAAA,EAAE,EAAES,EADR;AAEI,QAAA,IAAI,EAAEE,IAFV;AAGI,QAAA,MAAM,EAAEC,MAHZ;AAII,QAAA,QAAQ,EAAE,MAAIJ,mBAAmB,CAACC,EAAD;AAJrC;AAAA;AAAA;AAAA;AAAA;AALJ,OACSA,EADT;AAAA;AAAA;AAAA;AAAA,YADH,CALT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA7BD;;KAAML,Q;AA8BNA,QAAQ,CAACS,SAAT,GAAmB;AACfJ,EAAAA,EAAE,EAACZ,SAAS,CAACiB,MADE;AAEfH,EAAAA,IAAI,EAACd,SAAS,CAACiB,MAFA;AAGfF,EAAAA,MAAM,EAACf,SAAS,CAACiB;AAHF,CAAnB;;AAMA,MAAMC,kBAAkB,GAAC,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAChD,QAAMC,gBAAgB,GAAGD,MAAM,CAACE,WAAP,EAAzB;AAEA,SAAOH,WAAW,CAACC,MAAZ,CAAmB,CAAC;AAACN,IAAAA;AAAD,GAAD,KACxBA,IAAI,CAACQ,WAAL,GAAmBC,QAAnB,CAA4BF,gBAA5B,CADK,CAAP;AAGD,CAND;;AAQA,MAAMG,eAAe,GAAE,CAAC;AAAEhB,EAAAA,QAAQ,EAAE;AAAEiB,IAAAA,KAAF;AAASL,IAAAA;AAAT;AAAZ,CAAD,MAAqC;AACxDZ,EAAAA,QAAQ,EAAEU,kBAAkB,CAACO,KAAD,EAAQL,MAAR;AAD4B,CAArC,CAAvB;;AAIA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,eAAe,EAAGG,EAAD,IAAQe,QAAQ,CAACtB,kBAAkB,CAACuB,aAAnB,CAAiChB,EAAjC,CAAD,CADG;AAEpCF,EAAAA,WAAW,EAAC,MAAMiB,QAAQ,CAACrB,YAAY,CAACA,YAAb,CAA0B,EAA1B,CAAD;AAFU,CAAL,CAAnC;;AAKA,eAAeF,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport styles from './Contacts.module.css'\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts-operations'\r\nimport changeFilter from '../../redux/contacts-actions'\r\n\r\nconst Contacts = ({contacts,onRemoveContact,clearFilter}) => {\r\n    \r\n    const handleRemoveContact = id => {\r\n        onRemoveContact(id);\r\n        clearFilter()\r\n    }\r\n\r\n    return(\r\n        <TransitionGroup \r\n            component=\"ul\" \r\n            className=\"ContactsList\"\r\n            >\r\n                <h2>Contacts</h2>\r\n                {contacts.map(({id,name,number})=>(\r\n                    <CSSTransition \r\n                        key={id}\r\n                        timeout={2500}\r\n                        classNames={styles}\r\n                        >\r\n                        <ContactsItem \r\n                            id={id}\r\n                            name={name}\r\n                            number={number}\r\n                            onRemove={()=>handleRemoveContact(id)}\r\n                        />\r\n                    </CSSTransition>                   \r\n                ))}\r\n        </TransitionGroup>                       \r\n    )\r\n}\r\nContacts.propTypes={\r\n    id:PropTypes.string,\r\n    name:PropTypes.string,\r\n    number:PropTypes.string,\r\n}\r\n\r\nconst getVisibleContacts=(allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({name})=>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  )\r\n}\r\n\r\nconst mapStateToProps =({ contacts: { items, filter } })=> ({\r\n    contacts: getVisibleContacts(items, filter),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onRemoveContact: (id) => dispatch(contactsOperations.removeContact(id)),\r\n    clearFilter:() => dispatch(changeFilter.changeFilter(''))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts)"]},"metadata":{},"sourceType":"module"}