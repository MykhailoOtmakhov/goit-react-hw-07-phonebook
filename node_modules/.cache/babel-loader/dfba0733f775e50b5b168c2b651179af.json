{"ast":null,"code":"// import types from './contacts-types'\nimport { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit'; // const addContact = (name,number) => ({\n//     type: types.ADD,\n//     payload: {\n//         id: uuidv4(),\n//         name,\n//         number,\n//     }\n// })\n\nconst addContact = createAction('contacts/Add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number\n  }\n}));\nconst showNoty = createAction('contacts/ShowNoty', name => {\n  if (this.state.contacts.find(item => item.name === name)) {\n    this.setState({\n      showNoty: true\n    });\n    setTimeout(() => this.setState({\n      showNoty: false\n    }), 3000);\n  } else {\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts]\n    }));\n  }\n});\nconst removeContact = createAction('contacts/Remove'); // const removeContact = contactId => ({\n//     type: types.REMOVE,\n//     payload: contactId,\n// })\n\nconst changeFilter = createAction('contacts/ChangeFilter'); // const changeFilter = value => ({\n//     type: types.CHANGE_FILTER,\n//     payload: value,\n//   })\n\nexport default {\n  addContact,\n  removeContact,\n  changeFilter,\n  showNoty\n};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-actions.js"],"names":["v4","uuidv4","createAction","addContact","name","number","payload","id","showNoty","state","contacts","find","item","setState","setTimeout","prevState","contact","removeContact","changeFilter"],"mappings":"AAAA;AACA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,YAAT,QAA6B,kBAA7B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAGD,YAAY,CAAC,cAAD,EAAiB,CAACE,IAAD,EAAMC,MAAN,MAAkB;AAC9DC,EAAAA,OAAO,EAAE;AACLC,IAAAA,EAAE,EAAEN,MAAM,EADL;AAELG,IAAAA,IAFK;AAGLC,IAAAA;AAHK;AADqD,CAAlB,CAAjB,CAA/B;AAQA,MAAMG,QAAQ,GAAGN,YAAY,CAAC,mBAAD,EAAsBE,IAAI,IAAI;AACvD,MAAI,KAAKK,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAA0BC,IAAD,IAAQA,IAAI,CAACR,IAAL,KAAYA,IAA7C,CAAJ,EAAwD;AAChD,SAAKS,QAAL,CAAc;AAACL,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACEM,IAAAA,UAAU,CAAC,MAAM,KAAKD,QAAL,CAAc;AAACL,MAAAA,QAAQ,EAAE;AAAX,KAAd,CAAP,EAAyC,IAAzC,CAAV;AACH,GAHP,MAGa;AACL,SAAKK,QAAL,CAAcE,SAAS,KAAG;AACxBL,MAAAA,QAAQ,EAAE,CAACM,OAAD,EAAU,GAAGD,SAAS,CAACL,QAAvB;AADc,KAAH,CAAvB;AAGD;AACV,CAT4B,CAA7B;AAWA,MAAMO,aAAa,GAAGf,YAAY,CAAC,iBAAD,CAAlC,C,CACA;AACA;AACA;AACA;;AAEA,MAAMgB,YAAY,GAAGhB,YAAY,CAAC,uBAAD,CAAjC,C,CACA;AACA;AACA;AACA;;AAEA,eAAe;AAAEC,EAAAA,UAAF;AAAcc,EAAAA,aAAd;AAA6BC,EAAAA,YAA7B;AAA2CV,EAAAA;AAA3C,CAAf","sourcesContent":["// import types from './contacts-types'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\n// const addContact = (name,number) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         id: uuidv4(),\r\n//         name,\r\n//         number,\r\n//     }\r\n// })\r\nconst addContact = createAction('contacts/Add', (name,number) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    }\r\n}));\r\n\r\nconst showNoty = createAction('contacts/ShowNoty', name => {\r\n    if (this.state.contacts.find((item)=>item.name===name)) {\r\n            this.setState({showNoty: true})\r\n              setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n          } else {\r\n            this.setState(prevState=>({\r\n              contacts: [contact, ...prevState.contacts],\r\n            }))\r\n          }    \r\n})\r\n\r\nconst removeContact = createAction('contacts/Remove');\r\n// const removeContact = contactId => ({\r\n//     type: types.REMOVE,\r\n//     payload: contactId,\r\n// })\r\n\r\nconst changeFilter = createAction('contacts/ChangeFilter');\r\n// const changeFilter = value => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n//   })\r\n\r\nexport default { addContact, removeContact, changeFilter, showNoty }"]},"metadata":{},"sourceType":"module"}