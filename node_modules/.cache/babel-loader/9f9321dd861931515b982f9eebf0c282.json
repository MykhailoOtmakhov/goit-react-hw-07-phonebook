{"ast":null,"code":"import _toConsumableArray from\"D:/projects/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import contactsReducer from'./contacts-reducer';import logger from'redux-logger';import storage from'redux-persist/lib/storage';import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';var contactsPersistConfig={key:'contacts',storage:storage,blacklist:['filter']};var middleware=[].concat(_toConsumableArray(getDefaultMiddleware()),[logger]);var store=configureStore({reducer:{contacts:persistReducer(contactsPersistConfig,contactsReducer)},middleware:getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}}),devTools:process.env.NODE_ENV==='development'});var persistor=persistStore(store);export default{store:store,persistor:persistor};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","contactsReducer","logger","storage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","blacklist","middleware","store","reducer","contacts","serializableCheck","ignoredActions","devTools","process","env","NODE_ENV","persistor"],"mappings":"4KAAA,OAASA,cAAT,CAAyBC,oBAAzB,KAAqD,kBAArD,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,OACIC,YADJ,CAEIC,cAFJ,CAGIC,KAHJ,CAIIC,SAJJ,CAKIC,KALJ,CAMIC,OANJ,CAOIC,KAPJ,CAQIC,QARJ,KASS,eATT,CAWA,GAAMC,CAAAA,qBAAqB,CAAG,CAC1BC,GAAG,CAAE,UADqB,CAE1BV,OAAO,CAAPA,OAF0B,CAG1BW,SAAS,CAAE,CAAC,QAAD,CAHe,CAA9B,CAMA,GAAMC,CAAAA,UAAU,8BAAOf,oBAAoB,EAA3B,GAA+BE,MAA/B,EAAhB,CAEA,GAAMc,CAAAA,KAAK,CAAGjB,cAAc,CAAC,CACzBkB,OAAO,CAAE,CACLC,QAAQ,CAAEb,cAAc,CAACO,qBAAD,CAAwBX,eAAxB,CADnB,CADgB,CAIzBc,UAAU,CAAEf,oBAAoB,CAAC,CAC7BmB,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACd,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADU,CAAD,CAJP,CASzBU,QAAQ,CAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAwB,aATT,CAAD,CAA5B,CAYA,GAAMC,CAAAA,SAAS,CAAGrB,YAAY,CAACY,KAAD,CAA9B,CAEA,cAAe,CAAEA,KAAK,CAALA,KAAF,CAASS,SAAS,CAATA,SAAT,CAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts-reducer'\r\nimport logger from 'redux-logger'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n  } from 'redux-persist'\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n}\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger]\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n    },\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        }\r\n      }),\r\n    devTools: process.env.NODE_ENV ==='development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}