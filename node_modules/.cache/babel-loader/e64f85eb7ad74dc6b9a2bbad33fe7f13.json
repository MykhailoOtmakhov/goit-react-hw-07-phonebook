{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst items = (state = [], action) => {\n  return state;\n};\n\nconst filter = (state = [], action) => {\n  return state;\n};\n\nexport default combineReducers({\n  items,\n  filter\n}); // import { combineReducers } from \"redux\"\n// import { createReducer } from '@reduxjs/toolkit'\n// // import types from './contacts-types';\n// import actions from './contacts-actions'\n// const items = createReducer([], {\n//     [actions.addContact]: (state,{payload}) => [...state, payload],\n//     [actions.removeContact]: (state,{payload}) => state.filter(({id})=>id !== payload),\n// })\n// // const items = (state = [], {type, payload}) => {\n// //     switch (type) {\n// //         case types.ADD:\n// //             return [...state, payload];            \n// //         case types.REMOVE:\n// //             return state.filter(({id})=>id !== payload);\n// //         default:\n// //             return state;\n// //     }\n// // }\n// const filter = createReducer('', {\n//     [actions.changeFilter]: (_, {payload}) => payload,\n// })\n// // const filter = (state = '', {type, payload}) => {\n// //     switch (type) {\n// //         case 'contacts/ChangeFilter':\n// //             return payload;\n// //         default :\n// //             return state;            \n// //     }\n// // }\n// export default combineReducers({\n//     items,\n//     filter\n// })","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","items","state","action","filter"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAGA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAuB;AACjC,SAAOD,KAAP;AACH,CAFD;;AAIA,MAAME,MAAM,GAAG,CAACF,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAuB;AAClC,SAAOD,KAAP;AACH,CAFD;;AAIA,eAAeF,eAAe,CAAC;AAC3BC,EAAAA,KAD2B;AAE3BG,EAAAA;AAF2B,CAAD,CAA9B,C,CAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from 'redux'\r\n\r\n\r\nconst items = (state =[], action) => {\r\n    return state;\r\n}\r\n\r\nconst filter = (state =[], action) => {\r\n    return state;\r\n}\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})\r\n\r\n// import { combineReducers } from \"redux\"\r\n// import { createReducer } from '@reduxjs/toolkit'\r\n// // import types from './contacts-types';\r\n// import actions from './contacts-actions'\r\n\r\n// const items = createReducer([], {\r\n//     [actions.addContact]: (state,{payload}) => [...state, payload],\r\n//     [actions.removeContact]: (state,{payload}) => state.filter(({id})=>id !== payload),\r\n// })\r\n\r\n// // const items = (state = [], {type, payload}) => {\r\n// //     switch (type) {\r\n// //         case types.ADD:\r\n// //             return [...state, payload];            \r\n    \r\n// //         case types.REMOVE:\r\n// //             return state.filter(({id})=>id !== payload);\r\n\r\n// //         default:\r\n// //             return state;\r\n// //     }\r\n// // }\r\n\r\n// const filter = createReducer('', {\r\n//     [actions.changeFilter]: (_, {payload}) => payload,\r\n// })\r\n\r\n// // const filter = (state = '', {type, payload}) => {\r\n// //     switch (type) {\r\n// //         case 'contacts/ChangeFilter':\r\n// //             return payload;\r\n// //         default :\r\n// //             return state;            \r\n// //     }\r\n// // }\r\n\r\n// export default combineReducers({\r\n//     items,\r\n//     filter\r\n// })"]},"metadata":{},"sourceType":"module"}