{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\nimport { CSSTransition } from 'react-transition-group';\nimport Notification from '../Notification/Notification';\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: '',\n      showNoty: false\n    };\n    this.nameInputId = uuidv4();\n    this.numberInputId = uuidv4();\n\n    this.handleInputChange = evt => {\n      const {\n        name,\n        value\n      } = evt.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      const {\n        name,\n        showNoty\n      } = this.state;\n      evt.preventDefault(); // console.log(this.state);\n\n      if (this.props.contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n        this.setState({\n          showNoty: true\n        });\n        setTimeout(() => this.setState({\n          showNoty: false\n        }), 3000);\n      } else {\n        this.props.onAddContact(this.state);\n      }\n\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: this.state.showNoty,\n        timeout: 250,\n        classNames: \"notification\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.nameInputId,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleInputChange,\n            id: this.nameInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.numberInputId,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"tel\",\n            name: \"number\",\n            value: this.state.number,\n            onChange: this.handleInputChange,\n            id: this.numberInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: ({\n    name,\n    number\n  }) => dispatch(contactsActions.addContact({\n    name,\n    number\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","v4","uuidv4","styles","connect","contactsActions","CSSTransition","Notification","ContactForm","state","name","number","showNoty","nameInputId","numberInputId","handleInputChange","evt","value","currentTarget","setState","handleSubmit","preventDefault","props","contacts","find","item","toLowerCase","setTimeout","onAddContact","reset","render","form","label","input","button","mapDispatchToProps","dispatch","addContact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\nimport {connect} from 'react-redux'\r\nimport contactsActions from '../../redux/contacts-actions'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Notification from '../Notification/Notification'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        showNoty: false,\r\n    }\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.currentTarget;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    handleSubmit=evt=>{\r\n      const { name, showNoty } = this.state;\r\n      evt.preventDefault(); \r\n        // console.log(this.state);\r\n        if (this.props.contacts.find((item)=>item.name.toLowerCase()===name.toLowerCase())) {\r\n          this.setState({showNoty: true})\r\n          setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n        } else {\r\n          this.props.onAddContact(this.state);\r\n        }\r\n        this.reset()\r\n      }\r\n     \r\n        // this.props.onAddContact(this.state);\r\n        \r\n    \r\n    reset=()=>{\r\n        this.setState({name: '', number: '',});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n              <CSSTransition\r\n          in={this.state.showNoty} \r\n          timeout={250}\r\n          classNames=\"notification\"\r\n          unmountOnExit>\r\n            <Notification />\r\n        </CSSTransition>\r\n\r\n                <form \r\n                  onSubmit={this.handleSubmit}\r\n                  className={styles.form}>\r\n                  <label \r\n                    className={styles.label}\r\n                    htmlFor={this.nameInputId}>\r\n                        Name\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.nameInputId}\r\n                    />\r\n                  </label>\r\n                  <label \r\n                  className={styles.label}\r\n                  htmlFor={this.numberInputId}>\r\n                      Number\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"tel\"\r\n                      name=\"number\"\r\n                      value={this.state.number}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.numberInputId}\r\n                    />\r\n                  </label>\r\n                  <button \r\n                    className={styles.button}\r\n                    type=\"submit\" \r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Add contact\r\n                  </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  onAddContact: ({name, number}) => dispatch(contactsActions.addContact({name,number}))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(ContactForm)\r\n\r\n"]},"metadata":{},"sourceType":"module"}