{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\nimport Header from './components/Header/Header.js';\nimport Notification from './components/Notification/Notification';\nimport PropTypes from 'prop-types';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showNoty: false\n    };\n\n    this.formSubmitHandler = data => {\n      console.log(data);\n    };\n  }\n\n  // getVisibleContacts=()=>{\n  //   const{filter, contacts} = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact=>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   )\n  // }\n  render() {\n    const {\n      showNoty\n    } = this.state; // const visibleContacts = this.getVisibleContacts();\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: showNoty,\n        timeout: 250,\n        classNames: \"notification\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: contacts.length > 1,\n        timeout: 250,\n        classNames: \"container\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contacts // contacts={visibleContacts}\n      // onRemoveContact={this.removeContact} \n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.defaultProps = {};\nApp.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  showNoty: PropTypes.bool\n};\nApp.defaultProps = {\n  contacts: [],\n  filter: '',\n  showNoty: false\n};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/App.js"],"names":["React","Component","v4","uuidv4","ContactForm","Contacts","Filter","CSSTransition","Header","Notification","PropTypes","App","state","showNoty","formSubmitHandler","data","console","log","render","contacts","length","defaultProps","propTypes","array","filter","string","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAGzCW,KAHyC,GAGjC;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAHiC;;AAAA,SAoDzCC,iBApDyC,GAoDvBC,IAAI,IAAE;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAtDwC;AAAA;;AAwDzC;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACL,MAAAA;AAAD,QAAW,KAAKD,KAAtB,CADO,CAEP;;AACA,wBACE;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,EAAE,EAAEC,QADN;AAEE,QAAA,OAAO,EAAE,GAFX;AAGE,QAAA,UAAU,EAAC,cAHb;AAIE,QAAA,aAAa,MAJf;AAAA,+BAKI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,aAAD;AACE,QAAA,EAAE,EAAEM,QAAQ,CAACC,MAAT,GAAgB,CADtB;AAEE,QAAA,OAAO,EAAE,GAFX;AAGE,QAAA,UAAU,EAAC,WAHb;AAIE,QAAA,aAAa,MAJf;AAAA,+BAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAVF,eAsBM,QAAC,QAAD,CACE;AACA;AAFF;AAAA;AAAA;AAAA;AAAA,cAtBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAjGwC;AAAtBT,G,CACZU,Y,GAAe,E;AAmGxBV,GAAG,CAACW,SAAJ,GAAc;AACZH,EAAAA,QAAQ,EAACT,SAAS,CAACa,KADP;AAEZC,EAAAA,MAAM,EAACd,SAAS,CAACe,MAFL;AAGZZ,EAAAA,QAAQ,EAACH,SAAS,CAACgB;AAHP,CAAd;AAMAf,GAAG,CAACU,YAAJ,GAAmB;AACjBF,EAAAA,QAAQ,EAAE,EADO;AAEjBK,EAAAA,MAAM,EAAE,EAFS;AAGjBX,EAAAA,QAAQ,EAAE;AAHO,CAAnB","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Contacts from './components/Contacts/Contacts';\r\nimport Filter from './components/Filter/Filter';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport './App.css'\r\nimport Header from './components/Header/Header.js';\r\nimport Notification from './components/Notification/Notification'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class App extends Component {\r\n  static defaultProps = {}\r\n  \r\n  state = {\r\n    showNoty: false,\r\n  }\r\n\r\n  // componentDidMount(){\r\n  //   const savedContacts = localStorage.getItem('contacts');\r\n  //   if(savedContacts){\r\n  //     this.setState({\r\n  //       contacts: JSON.parse(savedContacts),\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // componentDidUpdate(prevProps, prevState){\r\n  //   if(prevState.contacts !==this.state.contacts){\r\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  //   }\r\n  // }\r\n\r\n  // addContact=({name, number})=>{\r\n  //   const contact = {\r\n  //     id: uuidv4(),\r\n  //     name: name,\r\n  //     number: number,\r\n  //   };\r\n\r\n  //   if (this.state.contacts.find((item)=>item.name===name)) {\r\n  //     this.setState({showNoty: true})\r\n  //       setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n  //   } else {\r\n  //     this.setState(prevState=>({\r\n  //       contacts: [contact, ...prevState.contacts],\r\n  //     }))\r\n  //   }\r\n  // }    \r\n\r\n  // removeContact=contactId=>{\r\n  //   this.setState(prevState=>{\r\n  //     return{\r\n  //         contacts: prevState.contacts.filter(({id})=>id !== contactId),\r\n  //         filter: '',\r\n  //     }\r\n  //   })      \r\n  // }\r\n\r\n  // changeFilter=e=>{\r\n  //   this.setState({filter: e.currentTarget.value})\r\n  // }\r\n\r\n  formSubmitHandler=data=>{\r\n    console.log(data);\r\n  }\r\n\r\n  // getVisibleContacts=()=>{\r\n  //   const{filter, contacts} = this.state;\r\n  //   const normalizedFilter = filter.toLowerCase();\r\n  //   return contacts.filter(contact=>\r\n  //     contact.name.toLowerCase().includes(normalizedFilter),\r\n  //   )\r\n  // }\r\n\r\n  render() {\r\n    const {showNoty}=this.state;\r\n    // const visibleContacts = this.getVisibleContacts();\r\n    return(\r\n      <div>\r\n        <CSSTransition\r\n          in={showNoty} \r\n          timeout={250}\r\n          classNames=\"notification\"\r\n          unmountOnExit>\r\n            <Notification />\r\n        </CSSTransition>\r\n        <Header />\r\n        <ContactForm />\r\n        <CSSTransition \r\n          in={contacts.length>1}\r\n          timeout={250}\r\n          classNames=\"container\"\r\n          unmountOnExit>\r\n            <Filter />\r\n        </CSSTransition>\r\n        {/* <CSSTransition \r\n          in={contacts.length>0}\r\n          timeout={250}\r\n          classNames=\"container\"\r\n          unmountOnExit> */}\r\n            <Contacts \r\n              // contacts={visibleContacts}\r\n              // onRemoveContact={this.removeContact} \r\n            />\r\n        {/* </CSSTransition>        */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes={\r\n  contacts:PropTypes.array,\r\n  filter:PropTypes.string,\r\n  showNoty:PropTypes.bool,\r\n}\r\n\r\nApp.defaultProps = {\r\n  contacts: [],\r\n  filter: '',\r\n  showNoty: false,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}