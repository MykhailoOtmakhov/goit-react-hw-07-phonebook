{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-05-phonebook\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\nimport Header from './components/Header/Header.js';\nimport Notification from './components/Notification/Notification';\nimport stylesNoty from './components/Notification/Notification.module.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      filter: '',\n      showNoty: false\n    };\n\n    this.addContact = ({\n      name,\n      number\n    }) => {\n      const contact = {\n        id: uuidv4(),\n        name: name,\n        number: number\n      };\n\n      if (this.state.contacts.find(item => item.name === name)) {\n        console.log(this.state);\n        this.setState({\n          showNoty: true\n        });\n        setTimeout(() => this.setState({\n          showNoty: false\n        }), 1000);\n      } else {\n        this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts]\n        }));\n      }\n    };\n\n    this.removeContact = contactId => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(({\n            id\n          }) => id !== contactId)\n        };\n      });\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.formSubmitHandler = data => {\n      console.log(data);\n    };\n\n    this.getVisibleContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n  }\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter,\n      showNoty\n    } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: showNoty,\n        timeout: 2000,\n        classNames: stylesNoty,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Notification, {\n          className: stylesNoty.containerNoty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onAddContact: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: this.changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: contacts.length > 0,\n        timeout: 250,\n        classNames: \"container\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Contacts, {\n          contacts: visibleContacts,\n          onRemoveContact: this.removeContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.defaultProps = {};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-05-phonebook/src/App.js"],"names":["React","Component","v4","uuidv4","ContactForm","Contacts","Filter","CSSTransition","Header","Notification","stylesNoty","App","state","contacts","filter","showNoty","addContact","name","number","contact","id","find","item","console","log","setState","setTimeout","prevState","removeContact","contactId","changeFilter","e","currentTarget","value","formSubmitHandler","data","getVisibleContacts","normalizedFilter","toLowerCase","includes","componentDidMount","savedContacts","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","visibleContacts","containerNoty","length","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group'\nimport './App.css'\nimport Header from './components/Header/Header.js';\nimport Notification from './components/Notification/Notification'\nimport stylesNoty from './components/Notification/Notification.module.css';\n\nexport default class App extends Component {\n  static defaultProps = {}\n  \n  state = {\n    contacts: [],\n    filter: '',\n    showNoty: false,\n  }\n\n  componentDidMount(){\n    const savedContacts = localStorage.getItem('contacts');\n    if(savedContacts){\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.contacts !==this.state.contacts){\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact=({name, number})=>{\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    if (this.state.contacts.find((item)=>item.name===name)) {\n      console.log(this.state)\n      this.setState({showNoty: true})\n        setTimeout(() => this.setState({showNoty: false}), 1000)      \n    } else {\n      this.setState(prevState=>({\n        contacts: [contact, ...prevState.contacts],\n      }))\n    }\n  }    \n\n  removeContact=contactId=>{\n    this.setState(prevState=>{\n      return{\n          contacts: prevState.contacts.filter(({id})=>\n          id !== contactId),\n      }\n    })      \n  }\n\n  changeFilter=e=>{\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  formSubmitHandler=data=>{\n    console.log(data);\n  }\n\n  getVisibleContacts=()=>{\n    const{filter, contacts} = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact=>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n  }\n\n  render() {\n    const {contacts, filter, showNoty}=this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return(\n      <div>\n        <CSSTransition\n          in={showNoty} \n          timeout={2000}\n          classNames={stylesNoty}\n          unmountOnExit>\n            <Notification className={stylesNoty.containerNoty}/>\n        </CSSTransition>\n        <Header />\n        <ContactForm \n          onAddContact={this.addContact}\n        />\n        <h2>Contacts</h2>\n        <Filter \n          value={filter}\n          onChange={this.changeFilter}\n        />\n        <CSSTransition \n          in={contacts.length>0}\n          timeout={250}\n          classNames=\"container\"\n          unmountOnExit>\n            <Contacts \n              contacts={visibleContacts}\n              onRemoveContact={this.removeContact} \n            />\n        </CSSTransition>       \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}