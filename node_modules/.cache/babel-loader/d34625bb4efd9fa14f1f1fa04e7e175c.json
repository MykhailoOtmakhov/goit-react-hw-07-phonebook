{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items; // const getVisibleContacts = state => {\n//     const allContacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n//     return allContacts.filter(({name})=>\n//         name.toLowerCase().includes(normalizedFilter),\n//     )\n// }\n\n\nconst getVisibleContacts = createSelector(console.log('rerender')[(getAllContacts, getFilter)], (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({\n    name\n  }) => name.toLowerCase().includes(normalizedFilter));\n});\nexport default {\n  getLoading,\n  getFilter,\n  getVisibleContacts\n};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-07-phonebook/src/redux/contacts-selectors.js"],"names":["createSelector","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","console","log","allContacts","normalizedFilter","toLowerCase","name","includes"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,OAA3C;;AAEA,MAAMC,SAAS,GAAGH,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeG,MAA1C;;AAEA,MAAMC,cAAc,GAAGL,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeK,KAA/C,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,kBAAkB,GAAGT,cAAc,CACrCU,OAAO,CAACC,GAAR,CAAY,UAAZ,GACCJ,cAAc,EAAEF,SADjB,EADqC,EAGrC,CAACO,WAAD,EAAcN,MAAd,KAAyB;AACrB,QAAMO,gBAAgB,GAAGP,MAAM,CAACQ,WAAP,EAAzB;AAEA,SAAOF,WAAW,CAACN,MAAZ,CAAmB,CAAC;AAACS,IAAAA;AAAD,GAAD,KACtBA,IAAI,CAACD,WAAL,GAAmBE,QAAnB,CAA4BH,gBAA5B,CADG,CAAP;AAGH,CAToC,CAAzC;AAcA,eAAe;AACXZ,EAAAA,UADW;AAEXI,EAAAA,SAFW;AAGXI,EAAAA;AAHW,CAAf","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\n// const getVisibleContacts = state => {\r\n//     const allContacts = getAllContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return allContacts.filter(({name})=>\r\n//         name.toLowerCase().includes(normalizedFilter),\r\n//     )\r\n// }\r\n\r\nconst getVisibleContacts = createSelector(\r\n    console.log('rerender')\r\n    [getAllContacts, getFilter],\r\n    (allContacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        \r\n        return allContacts.filter(({name})=>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        )\r\n    }\r\n)\r\n\r\n\r\n\r\nexport default {\r\n    getLoading,\r\n    getFilter,\r\n    getVisibleContacts\r\n}"]},"metadata":{},"sourceType":"module"}