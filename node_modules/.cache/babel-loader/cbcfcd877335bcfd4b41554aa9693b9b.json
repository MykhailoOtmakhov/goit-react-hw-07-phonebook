{"ast":null,"code":"import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { fetchContactRequest, fetchContactSuccess, fetchContactError, addContactRequest, addContactSuccess, addContactError, removeContactRequest, removeContactSuccess, removeContactError } from './contacts-actions';\naxios.defaults.daseURL = 'http://localhost:4040';\n\nconst fetchContact = () => dispatch => {\n  dispatch(fetchContactRequest()); // try {\n  //     const {data} = await axios.get('/contacts');\n  //     dispatch(fetchContactSuccess(data))\n  // } catch (error) {\n  //     dispatch(fetchContactError(error.message))\n  // }\n\n  axios.get('/contacts').then(({\n    data\n  }) => dispatch(fetchContactSuccess(data))).catch(error => dispatch(fetchContactError(error.message)));\n};\n\nconst addContact = (name, number, message) => dispatch => {\n  const contact = {\n    id: uuidv4(),\n    name,\n    number,\n    message\n  };\n  dispatch(addContactRequest());\n  axios.post('/contacts', contact).then(({\n    data\n  }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error.message)));\n};\n\nconst removeContact = contactId => dispatch => {\n  dispatch(removeContactRequest());\n  axios.delete(`/contacts/${contactId}`).then(() => dispatch(removeContactSuccess(contactId))).catch(error => dispatch(removeContactError(error.message)));\n};\n\nexport default {\n  fetchContact,\n  addContact,\n  removeContact\n};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-07-phonebook/src/redux/contacts-operations.js"],"names":["axios","v4","uuidv4","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","defaults","daseURL","fetchContact","dispatch","get","then","data","catch","error","message","addContact","name","number","contact","id","post","removeContact","contactId","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,EAIIC,iBAJJ,EAKIC,iBALJ,EAMIC,eANJ,EAOIC,oBAPJ,EAQIC,oBARJ,EASIC,kBATJ,QAUO,oBAVP;AAYAX,KAAK,CAACY,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;;AAEA,MAAMC,YAAY,GAAG,MAAMC,QAAQ,IAAI;AACnCA,EAAAA,QAAQ,CAACZ,mBAAmB,EAApB,CAAR,CADmC,CAGnC;AACA;AAEA;AACA;AACA;AACA;;AAEAH,EAAAA,KAAK,CACAgB,GADL,CACS,WADT,EAEKC,IAFL,CAEU,CAAC;AAACC,IAAAA;AAAD,GAAD,KACFH,QAAQ,CAACX,mBAAmB,CAACc,IAAD,CAApB,CAHhB,EAIKC,KAJL,CAIWC,KAAK,IAAIL,QAAQ,CAACV,iBAAiB,CAACe,KAAK,CAACC,OAAP,CAAlB,CAJ5B;AAMH,CAjBD;;AAmBA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAMC,MAAN,EAAaH,OAAb,KAAyBN,QAAQ,IAAI;AACpD,QAAMU,OAAO,GAAG;AACZC,IAAAA,EAAE,EAAExB,MAAM,EADE;AAEZqB,IAAAA,IAFY;AAGZC,IAAAA,MAHY;AAIZH,IAAAA;AAJY,GAAhB;AAOAN,EAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AAEAN,EAAAA,KAAK,CACA2B,IADL,CACU,WADV,EACuBF,OADvB,EAEKR,IAFL,CAEU,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACFH,QAAQ,CAACR,iBAAiB,CAACW,IAAD,CAAlB,CAHhB,EAIKC,KAJL,CAIWC,KAAK,IAAIL,QAAQ,CAACP,eAAe,CAACY,KAAK,CAACC,OAAP,CAAhB,CAJ5B;AAKC,CAfL;;AAkBA,MAAMO,aAAa,GAAGC,SAAS,IAAId,QAAQ,IAAI;AAC3CA,EAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AAEAT,EAAAA,KAAK,CACA8B,MADL,CACa,aAAYD,SAAU,EADnC,EAEKZ,IAFL,CAEU,MAAMF,QAAQ,CAACL,oBAAoB,CAACmB,SAAD,CAArB,CAFxB,EAGKV,KAHL,CAGWC,KAAK,IAAIL,QAAQ,CAACJ,kBAAkB,CAACS,KAAK,CAACC,OAAP,CAAnB,CAH5B;AAIH,CAPD;;AAQI,eAAe;AACXP,EAAAA,YADW;AAEXQ,EAAAA,UAFW;AAGXM,EAAAA;AAHW,CAAf","sourcesContent":["import axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { \r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError, \r\n    addContactRequest, \r\n    addContactSuccess, \r\n    addContactError, \r\n    removeContactRequest, \r\n    removeContactSuccess, \r\n    removeContactError \r\n} from './contacts-actions'\r\n\r\naxios.defaults.daseURL = 'http://localhost:4040';\r\n\r\nconst fetchContact = () => dispatch => {\r\n    dispatch(fetchContactRequest());\r\n\r\n    // try {\r\n    //     const {data} = await axios.get('/contacts');\r\n\r\n    //     dispatch(fetchContactSuccess(data))\r\n    // } catch (error) {\r\n    //     dispatch(fetchContactError(error.message))\r\n    // }\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({data}) => \r\n            dispatch(fetchContactSuccess(data)))\r\n        .catch(error => dispatch(fetchContactError(error.message)))\r\n\r\n}\r\n\r\nconst addContact = (name,number,message) => dispatch => {\r\n    const contact = {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n        message\r\n    };\r\n\r\n    dispatch(addContactRequest())\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => \r\n            dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error.message)))\r\n    }\r\n\r\n\r\nconst removeContact = contactId => dispatch => {\r\n    dispatch(removeContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(removeContactSuccess(contactId)))\r\n        .catch(error => dispatch(removeContactError(error.message)))\r\n}\r\n    export default {\r\n        fetchContact,\r\n        addContact,\r\n        removeContact\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}