{"ast":null,"code":"import { combineReducers } from 'redux'; // import types from './contacts-types'\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions'; // const items = (state =[], { type, payload }) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload];            \n//         case types.REMOVE:\n//             return state.filter(({id}) => id !== payload);\n//         default: return state;}\n// }\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, {\n    payload\n  }) => state.find(item => item.name === payload.name ? { ...item,\n    showNoty: true\n  } : [...state, payload]),\n  // this.setState({showNoty: true})\n  //   setTimeout(() => this.setState({showNoty: false}), 3000)      \n  //        else {\n  //         this.setState(prevState=>({\n  //           contacts:  [...state, payload],\n  //         }))\n  //       }\n  //     }  ,\n  // // [...state, payload],\n  [actions.removeContact]: (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload)\n});\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, {\n    payload\n  }) => payload\n}); // const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case types.CHANGE_FILTER:\n//             return payload;\n//         default : return state;            \n//     }\n// }\n\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createReducer","actions","items","addContact","state","payload","find","item","name","showNoty","removeContact","filter","id","changeFilter","_"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CACA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA,MAAMC,KAAK,GAAGF,aAAa,CAAC,EAAD,EAAK;AAC5B,GAACC,OAAO,CAACE,UAAT,GAAsB,CAACC,KAAD,EAAO;AAAEC,IAAAA;AAAF,GAAP,KAClBD,KAAK,CAACE,IAAN,CAAWC,IAAI,IACXA,IAAI,CAACC,IAAL,KAAYH,OAAO,CAACG,IAApB,GAA2B,EAC3B,GAAGD,IADwB;AAClBE,IAAAA,QAAQ,EAAE;AADQ,GAA3B,GAC4B,CAAC,GAAGL,KAAJ,EAAWC,OAAX,CAFhC,CAFwB;AAMpB;AACA;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAACJ,OAAO,CAACS,aAAT,GAAyB,CAACN,KAAD,EAAO;AAACC,IAAAA;AAAD,GAAP,KAAqBD,KAAK,CAACO,MAAN,CAAa,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAQA,EAAE,KAAKP,OAA5B;AAhBlB,CAAL,CAA3B;AAmBA,MAAMM,MAAM,GAAGX,aAAa,CAAC,EAAD,EAAK;AAC7B,GAACC,OAAO,CAACY,YAAT,GAAwB,CAACC,CAAD,EAAI;AAAET,IAAAA;AAAF,GAAJ,KAAoBA;AADf,CAAL,CAA5B,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,eAAeN,eAAe,CAAC;AAC3BG,EAAAA,KAD2B;AAE3BS,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux'\r\n// import types from './contacts-types'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport actions from './contacts-actions'\r\n\r\n// const items = (state =[], { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];            \r\n\r\n//         case types.REMOVE:\r\n//             return state.filter(({id}) => id !== payload);\r\n\r\n//         default: return state;}\r\n// }\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state,{ payload }) => \r\n        state.find(item => \r\n            item.name===payload.name ? {\r\n            ...item, showNoty: true} :  [...state, payload],\r\n        ),\r\n            // this.setState({showNoty: true})\r\n            //   setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n    \r\n    //        else {\r\n    //         this.setState(prevState=>({\r\n    //           contacts:  [...state, payload],\r\n    //         }))\r\n    //       }\r\n    //     }  ,\r\n    // // [...state, payload],\r\n    [actions.removeContact]: (state,{payload}) => state.filter(({id})=>id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload;\r\n\r\n//         default : return state;            \r\n//     }\r\n// }\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})\r\n"]},"metadata":{},"sourceType":"module"}