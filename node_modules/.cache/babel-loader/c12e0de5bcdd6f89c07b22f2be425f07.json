{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-05-phonebook\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.addContact = ({\n      name,\n      number\n    }) => {\n      const contact = {\n        id: uuidv4(),\n        name: name,\n        number: number\n      };\n\n      if (this.state.contacts.find(item => item.name === name)) {\n        alert(`${name} is already in a contact`);\n      } else {\n        this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts]\n        }));\n      }\n\n      ;\n    };\n\n    this.removeContact = contactId => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(({\n            id\n          }) => id !== contactId)\n        };\n      });\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.formSubmitHandler = data => {\n      console.log(data);\n    };\n\n    this.getVisibleContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n  }\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"blue\"\n        },\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onAddContact: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: this.changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: contacts,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Contacts, {\n          contacts: visibleContacts,\n          onRemoveContact: this.removeContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.defaultProps = {};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-05-phonebook/src/App.js"],"names":["React","Component","v4","uuidv4","ContactForm","Contacts","Filter","CSSTransition","App","state","contacts","filter","addContact","name","number","contact","id","find","item","alert","setState","prevState","removeContact","contactId","changeFilter","e","currentTarget","value","formSubmitHandler","data","console","log","getVisibleContacts","normalizedFilter","toLowerCase","includes","componentDidMount","savedContacts","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","visibleContacts","color","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group'\n\nexport default class App extends Component {\n  static defaultProps = {}\n  state = {\n    contacts: [],\n    filter: '',\n  }\n  componentDidMount(){\n    const savedContacts = localStorage.getItem('contacts');\n    if(savedContacts){\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      })\n    }\n  }\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.contacts !==this.state.contacts){\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact=({name, number})=>{\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    if (this.state.contacts.find((item)=>item.name===name)) { \n      alert(`${name} is already in a contact`);\n   }else{\n    this.setState(prevState=>({\n      contacts: [contact, ...prevState.contacts],\n  }));\n};\n   }\n    \n\n  removeContact=contactId=>{\n    this.setState(prevState=>{\n      return{\n          contacts: prevState.contacts.filter(({id})=>\n          id !== contactId),\n      }\n    })      \n  }\n\n  changeFilter=e=>{\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  formSubmitHandler=data=>{\n    console.log(data);\n  };\n\n  getVisibleContacts=()=>{\n    const{filter, contacts} = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact=>\n      contact.name.toLowerCase().includes(normalizedFilter),\n      );\n  };\n\n  render() {\n    const {contacts, filter}=this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return(\n      <div>\n        <h1 style={{ color: \"blue\"}}>Phonebook</h1>\n        <ContactForm \n          onAddContact={this.addContact}\n        />\n        <h2>Contacts</h2>\n        {/* <p>Find contacts by name:</p> */}\n        <Filter \n          value={filter}\n          onChange={this.changeFilter}\n        />\n        {/* {contacts.length > 0 &&  */}\n        <CSSTransition in={contacts} unmountOnExit>\n          <Contacts \n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact} />  \n        </CSSTransition>    \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}