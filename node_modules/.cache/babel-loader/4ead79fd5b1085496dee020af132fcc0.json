{"ast":null,"code":"import contactsReducer from './contacts-reducer';\nimport { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter']\n};\nconst middleware = [...getDefaultMiddleware(), logger];\nconst rootReducer = combineReducers({\n  contacts: contactsReducer\n});\nconst persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n}); // const store = configureStore({\n//     reducer: {\n//         contacts: persistReducer(contactsPersistConfig, contactsReducer),\n//     },\n//     middleware: getDefaultMiddleware({\n//         serializableCheck: {\n//           ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n//         }\n//       }),\n//     devTools: process.env.NODE_ENV ==='development',\n// })\n\nexport default store; // import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import contactsReducer from './contacts-reducer'\n// import logger from 'redux-logger'\n// import storage from 'redux-persist/lib/storage'\n// import {\n//     persistStore,\n//     persistReducer,\n//     FLUSH,\n//     REHYDRATE,\n//     PAUSE,\n//     PERSIST,\n//     PURGE,\n//     REGISTER\n//   } from 'redux-persist'\n// const contactsPersistConfig = {\n//     key: 'contacts',\n//     storage,\n//     blacklist: ['filter'],\n// }\n// const middleware = [...getDefaultMiddleware(), logger]\n// const store = configureStore({\n//     reducer: {\n//         contacts: persistReducer(contactsPersistConfig, contactsReducer),\n//     },\n//     middleware: getDefaultMiddleware({\n//         serializableCheck: {\n//           ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n//         }\n//       }),\n//     devTools: process.env.NODE_ENV ==='development',\n// })\n// const persistor = persistStore(store)\n// export default { store, persistor };","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["contactsReducer","combineReducers","configureStore","getDefaultMiddleware","logger","persistStore","persistReducer","storage","contactsPersistConfig","key","blacklist","middleware","rootReducer","contacts","persistedReducer","store","reducer","devTools","process","env","NODE_ENV"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,oBAA5B;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,oBAA1C,QAAsE,kBAAtE;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,qBAAqB,GAAG;AAC1BC,EAAAA,GAAG,EAAE,UADqB;AAE1BF,EAAAA,OAF0B;AAG1BG,EAAAA,SAAS,EAAE,CAAC,QAAD;AAHe,CAA9B;AAMA,MAAMC,UAAU,GAAG,CAAC,GAAGR,oBAAoB,EAAxB,EAA4BC,MAA5B,CAAnB;AAEA,MAAMQ,WAAW,GAAGX,eAAe,CAAE;AACjCY,EAAAA,QAAQ,EAAEb;AADuB,CAAF,CAAnC;AAIA,MAAMc,gBAAgB,GAAGR,cAAc,CAACE,qBAAD,EAAwBI,WAAxB,CAAvC;AACA,MAAMG,KAAK,GAAGb,cAAc,CAAC;AACzBc,EAAAA,OAAO,EAAE;AACLH,IAAAA,QAAQ,EAAEb;AADL,GADgB;AAIzBW,EAAAA,UAJyB;AAKzBM,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB;AALT,CAAD,CAA5B,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeL,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import contactsReducer from './contacts-reducer'\r\nimport { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n}\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger]\r\n\r\nconst rootReducer = combineReducers ({\r\n    contacts: contactsReducer,\r\n})\r\n\r\nconst persistedReducer = persistReducer(contactsPersistConfig, rootReducer )\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV ==='development',\r\n})\r\n\r\n// const store = configureStore({\r\n//     reducer: {\r\n//         contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n//     },\r\n//     middleware: getDefaultMiddleware({\r\n//         serializableCheck: {\r\n//           ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n//         }\r\n//       }),\r\n//     devTools: process.env.NODE_ENV ==='development',\r\n// })\r\n\r\nexport default store;\r\n\r\n// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import contactsReducer from './contacts-reducer'\r\n// import logger from 'redux-logger'\r\n// import storage from 'redux-persist/lib/storage'\r\n// import {\r\n//     persistStore,\r\n//     persistReducer,\r\n//     FLUSH,\r\n//     REHYDRATE,\r\n//     PAUSE,\r\n//     PERSIST,\r\n//     PURGE,\r\n//     REGISTER\r\n//   } from 'redux-persist'\r\n\r\n// const contactsPersistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// }\r\n\r\n// const middleware = [...getDefaultMiddleware(), logger]\r\n\r\n// const store = configureStore({\r\n//     reducer: {\r\n//         contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n//     },\r\n//     middleware: getDefaultMiddleware({\r\n//         serializableCheck: {\r\n//           ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n//         }\r\n//       }),\r\n//     devTools: process.env.NODE_ENV ==='development',\r\n// })\r\n\r\n// const persistor = persistStore(store)\r\n\r\n// export default { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}