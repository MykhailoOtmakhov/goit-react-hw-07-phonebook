{"ast":null,"code":"import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport actions from './contacts-actions';\naxios.defaults.daseURL = 'http://localhost:3000';\n\nconst addContact = (name, number, message) => dispatch => {\n  const contact = {\n    id: uuidv4(),\n    name,\n    number,\n    message\n  };\n  dispatch(actions.addContactRequest());\n  axios.post('/contacts', contact).then(({\n    data\n  }) => dispatch(actions.addContactSuccess(data))).catch(error => dispatch(actions.addContactError(error)));\n};\n\nexport default {\n  addContact\n};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-07-phonebook/src/redux/contacts-operation.js"],"names":["axios","v4","uuidv4","actions","defaults","daseURL","addContact","name","number","message","dispatch","contact","id","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEAH,KAAK,CAACI,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;;AAEA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAMC,MAAN,EAAaC,OAAb,KAAyBC,QAAQ,IAAI;AACpD,QAAMC,OAAO,GAAG;AACZC,IAAAA,EAAE,EAAEV,MAAM,EADE;AAEZK,IAAAA,IAFY;AAGZC,IAAAA,MAHY;AAIZC,IAAAA;AAJY,GAAhB;AAOAC,EAAAA,QAAQ,CAACP,OAAO,CAACU,iBAAR,EAAD,CAAR;AAEAb,EAAAA,KAAK,CAEAc,IAFL,CAEU,WAFV,EAEuBH,OAFvB,EAGKI,IAHL,CAGU,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACFN,QAAQ,CAACP,OAAO,CAACc,iBAAR,CAA0BD,IAA1B,CAAD,CAJhB,EAKKE,KALL,CAKWC,KAAK,IAAIT,QAAQ,CAACP,OAAO,CAACiB,eAAR,CAAwBD,KAAxB,CAAD,CAL5B;AAMC,CAhBL;;AAkBI,eAAe;AACXb,EAAAA;AADW,CAAf","sourcesContent":["import axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport actions from './contacts-actions'\r\n\r\naxios.defaults.daseURL = 'http://localhost:3000';\r\n\r\nconst addContact = (name,number,message) => dispatch => {\r\n    const contact = {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n        message\r\n    };\r\n\r\n    dispatch(actions.addContactRequest())\r\n\r\n    axios\r\n        \r\n        .post('/contacts', contact)\r\n        .then(({ data }) => \r\n            dispatch(actions.addContactSuccess(data)))\r\n        .catch(error => dispatch(actions.addContactError(error)))\r\n    }\r\n\r\n    export default {\r\n        addContact,\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}