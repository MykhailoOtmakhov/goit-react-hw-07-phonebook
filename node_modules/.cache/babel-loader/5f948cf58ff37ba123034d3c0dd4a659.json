{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts-reducer';\nconst rootReducer = combineReducers({\n  // counter: counterReducer,\n  contacts: contactsReducer // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n\n});\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store; // import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import contactsReducer from './contacts-reducer'\n// import logger from 'redux-logger'\n// import storage from 'redux-persist/lib/storage'\n// import {\n//     persistStore,\n//     persistReducer,\n//     FLUSH,\n//     REHYDRATE,\n//     PAUSE,\n//     PERSIST,\n//     PURGE,\n//     REGISTER\n//   } from 'redux-persist'\n// const contactsPersistConfig = {\n//     key: 'contacts',\n//     storage,\n//     blacklist: ['filter'],\n// }\n// const middleware = [...getDefaultMiddleware(), logger]\n// const store = configureStore({\n//     reducer: {\n//         contacts: persistReducer(contactsPersistConfig, contactsReducer),\n//     },\n//     middleware: getDefaultMiddleware({\n//         serializableCheck: {\n//           ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n//         }\n//       }),\n//     devTools: process.env.NODE_ENV ==='development',\n// })\n// const persistor = persistStore(store)\n// export default { store, persistor };","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","contactsReducer","rootReducer","contacts","store","middleware"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AAChC;AACAK,EAAAA,QAAQ,EAAEF,eAFsB,CAGhC;;AAHgC,CAAD,CAAnC;AAMA,MAAMG,KAAK,GAAGP,WAAW,CAACK,WAAD,EAAcF,mBAAmB,CACtDD,eAAe,CAAC,GAAGM,UAAJ,CADuC,CAAjC,CAAzB;AAIA,eAAeD,KAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport contactsReducer from './contacts-reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    // counter: counterReducer,\r\n    contacts: contactsReducer,\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(...middleware),\r\n))\r\n\r\nexport default store;\r\n// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import contactsReducer from './contacts-reducer'\r\n// import logger from 'redux-logger'\r\n// import storage from 'redux-persist/lib/storage'\r\n// import {\r\n//     persistStore,\r\n//     persistReducer,\r\n//     FLUSH,\r\n//     REHYDRATE,\r\n//     PAUSE,\r\n//     PERSIST,\r\n//     PURGE,\r\n//     REGISTER\r\n//   } from 'redux-persist'\r\n\r\n// const contactsPersistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// }\r\n\r\n// const middleware = [...getDefaultMiddleware(), logger]\r\n\r\n// const store = configureStore({\r\n//     reducer: {\r\n//         contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n//     },\r\n//     middleware: getDefaultMiddleware({\r\n//         serializableCheck: {\r\n//           ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n//         }\r\n//       }),\r\n//     devTools: process.env.NODE_ENV ==='development',\r\n// })\r\n\r\n// const persistor = persistStore(store)\r\n\r\n// export default { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}