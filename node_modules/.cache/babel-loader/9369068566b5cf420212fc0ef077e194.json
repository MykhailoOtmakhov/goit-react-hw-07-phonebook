{"ast":null,"code":"import { createStore } from 'redux';\nconst initialState = {\n  contacts: [],\n  showNoty: false,\n  name: '',\n  number: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'contacts/add':\n      return;\n\n      if (this.state.contacts.find(item => item.name === name)) {\n        this.setState({\n          showNoty: true\n        });\n        setTimeout(() => this.setState({\n          showNoty: false\n        }), 3000);\n      } else {\n        this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts]\n        }));\n      }\n\n    default:\n      return state;\n  } // console.log(action);\n  // return state\n\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["createStore","initialState","contacts","showNoty","name","number","reducer","state","action","type","find","item","setState","setTimeout","prevState","contact","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,QAAQ,EAAE,KAFO;AAGjBC,EAAAA,IAAI,EAAE,EAHW;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,cAAL;AACI;;AACI,UAAG,KAAKF,KAAL,CAAWL,QAAX,CAAoBQ,IAApB,CAA0BC,IAAD,IAAQA,IAAI,CAACP,IAAL,KAAYA,IAA7C,CAAH,EAAuD;AACnD,aAAKQ,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACIU,QAAAA,UAAU,CAAC,MAAM,KAAKD,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAAE;AAAX,SAAd,CAAP,EAAyC,IAAzC,CAAV;AACP,OAHD,MAGO;AACH,aAAKS,QAAL,CAAcE,SAAS,KAAG;AACtBZ,UAAAA,QAAQ,EAAE,CAACa,OAAD,EAAU,GAAGD,SAAS,CAACZ,QAAvB;AADY,SAAH,CAAvB;AAGH;;AAGT;AAAU,aAAOK,KAAP;AAbd,GAD8C,CAgB9C;AACA;;AACH,CAlBD;;AAoBA,MAAMS,KAAK,GAAGhB,WAAW,CAACM,OAAD,CAAzB;AAEA,eAAeU,KAAf","sourcesContent":["import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n    contacts: [], \r\n    showNoty: false,\r\n    name: '',\r\n    number: '',\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'contacts/add' :\r\n            return \r\n                if(this.state.contacts.find((item)=>item.name===name)) {\r\n                    this.setState({showNoty: true})\r\n                        setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n                } else {\r\n                    this.setState(prevState=>({\r\n                        contacts: [contact, ...prevState.contacts],\r\n                    }))\r\n                }\r\n            \r\n\r\n        default : return state;    \r\n    }\r\n    // console.log(action);\r\n    // return state\r\n}\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}