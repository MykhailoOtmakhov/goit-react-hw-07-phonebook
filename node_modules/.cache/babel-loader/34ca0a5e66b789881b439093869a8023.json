{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit'; // import types from './contacts-types';\n\nimport actions from './contacts-actions';\nconst items = createReducer([], {\n  [actions.addContact]: (state, {\n    payload\n  }) => [...state, payload],\n  [actions.removeContact]: (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload)\n}); // const items = (state = [], {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload];            \n//         case types.REMOVE:\n//             return state.filter(({id})=>id !== payload);\n//         default:\n//             return state;\n//     }\n// }\n\nconst filter = createReducer('', {}); // const filter = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case 'contacts/ChangeFilter':\n//             return payload;\n//         default :\n//             return state;            \n//     }\n// }\n\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createReducer","actions","items","addContact","state","payload","removeContact","filter","id"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,KAAK,GAAGF,aAAa,CAAC,EAAD,EAAK;AAC5B,GAACC,OAAO,CAACE,UAAT,GAAsB,CAACC,KAAD,EAAO;AAACC,IAAAA;AAAD,GAAP,KAAqB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CADf;AAE5B,GAACJ,OAAO,CAACK,aAAT,GAAyB,CAACF,KAAD,EAAO;AAACC,IAAAA;AAAD,GAAP,KAAqBD,KAAK,CAACG,MAAN,CAAa,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAQA,EAAE,KAAKH,OAA5B;AAFlB,CAAL,CAA3B,C,CAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AACA,MAAME,MAAM,GAAGP,aAAa,CAAC,EAAD,EAAK,EAAL,CAA5B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeD,eAAe,CAAC;AAC3BG,EAAAA,KAD2B;AAE3BK,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\"\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n// import types from './contacts-types';\r\nimport actions from './contacts-actions'\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state,{payload}) => [...state, payload],\r\n    [actions.removeContact]: (state,{payload}) => state.filter(({id})=>id !== payload),\r\n})\r\n\r\n// const items = (state = [], {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];            \r\n    \r\n//         case types.REMOVE:\r\n//             return state.filter(({id})=>id !== payload);\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\nconst filter = createReducer('', {\r\n    \r\n})\r\n// const filter = (state = '', {type, payload}) => {\r\n//     switch (type) {\r\n//         case 'contacts/ChangeFilter':\r\n//             return payload;\r\n//         default :\r\n//             return state;            \r\n//     }\r\n// }\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})"]},"metadata":{},"sourceType":"module"}