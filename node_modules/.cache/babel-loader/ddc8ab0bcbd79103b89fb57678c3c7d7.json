{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-03-image-finder\\\\src\\\\App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nconst ArticleList = ({\n  articles\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: articles.map(({\n    objectID,\n    url,\n    title\n  }) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noreferrer noopener\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, objectID, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = ArticleList;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      isLoading: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    axios.get('https://hn.algolia.com/api/v1/search?query=react').then(response => this.setState({\n      articles: response.data.hits\n    })).catch(error => this.setState({\n      error\n    })).finally(() => this.setState({\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      articles,\n      isLoading\n    } = this.state;\n    return isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(ArticleList, {\n      articles: articles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 44\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleList\");","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-03-image-finder/src/App.js"],"names":["React","Component","axios","ArticleList","articles","map","objectID","url","title","App","state","isLoading","error","componentDidMount","setState","get","then","response","data","hits","catch","finally","render"],"mappings":";;AAAA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAClB;AAAA,YACGA,QAAQ,CAACC,GAAT,CAAa,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA;AAAjB,GAAD,kBACZ;AAAA,2BACE;AAAG,MAAA,IAAI,EAAED,GAAT;AAAc,MAAA,MAAM,EAAC,QAArB;AAA8B,MAAA,GAAG,EAAC,qBAAlC;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA;AADF,KAASF,QAAT;AAAA;AAAA;AAAA;AAAA,UADD;AADH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,W;;AAYN,MAAMM,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNN,MAAAA,QAAQ,EAAE,EADJ;AAENO,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADkB;AAAA;;AAO1BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd;AAEAT,IAAAA,KAAK,CACFa,GADH,CACO,kDADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI,KAAKH,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAEa,QAAQ,CAACC,IAAT,CAAcC;AAA1B,KAAd,CAFpB,EAGGC,KAHH,CAGSR,KAAK,IAAI,KAAKE,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd,CAHlB,EAIGS,OAJH,CAIW,MAAM,KAAKP,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd,CAJjB;AAKD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA,QAAF;AAAYO,MAAAA;AAAZ,QAA0B,KAAKD,KAArC;AAEA,WAAOC,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAuB,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEP;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAvC;AACD;;AArByB;;AAyB5B,eAAeK,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nconst ArticleList = ({ articles }) => (\n  <ul>\n    {articles.map(({ objectID, url, title }) => (\n      <li key={objectID}>\n        <a href={url} target=\"_blank\" rel=\"noreferrer noopener\">\n          {title}\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n\nclass App extends Component {\n  state = {\n    articles: [],\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    axios\n      .get('https://hn.algolia.com/api/v1/search?query=react')\n      .then(response => this.setState({ articles: response.data.hits }))\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  render() {\n    const { articles, isLoading } = this.state;\n\n    return isLoading ? <p>Loading...</p> : <ArticleList articles={articles} />;\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}