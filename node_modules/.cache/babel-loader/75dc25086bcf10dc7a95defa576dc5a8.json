{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport contactReducer from './contacts-reducer';\nconst rootReducer = combineReducers({\n  contacts: contactReducer\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development'\n});\nexport default store; // const initialState = {\n// //     contacts: {\n// //         name: '',\n// //         number: '',\n// //     }, \n// //     showNoty: false,\n// // }\n// const reducer = (state = initialState, {type,payload}) => {\n//     switch(type) {\n//         case 'contacts/Add' :\n//             return {\n//                 ...state,\n//                 contacts: {\n//                     ...state.constacts,\n//                         name: state.contacts.name + payload,\n//             }\n//         }\n//             // console.log(state);\n//             // return {\n//             //     if (initialState.contacts.find((item)=>item.name===payload.contact.name)) {\n//             //         this.initialState.setState({showNoty: true})\n//             //             setTimeout(() => this.setState({showNoty: false}), 3000)      \n//             //     } else {\n//             //         this.initialState.setState(prevState=>({\n//             //             contacts: [payload, ...prevState.contacts],\n//             //         }))\n//             //     }\n//             // }\n//                 // this.setState(prevState=>{\n//                 //     return{\n//                 //         contacts: prevState.contacts.filter(({id})=>id !== payload),\n//                 //         filter: '',\n//                 //     }\n//                 // })  \n//         case 'contacts/Remove' :\n//             return {\n//                 contacts: state.constacts - payload,\n//             }\n//             // console.log('remove');\n//         default : return state;    \n//     }\n// }","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["combineReducers","configureStore","contactReducer","rootReducer","contacts","store","reducer","devTools","process","env","NODE_ENV"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA,MAAMC,WAAW,GAAGH,eAAe,CAAC;AAChCI,EAAAA,QAAQ,EAAEF;AADsB,CAAD,CAAnC;AAIA,MAAMG,KAAK,GAAGJ,cAAc,CAAC;AACzBK,EAAAA,OAAO,EAAEH,WADgB;AAEzBI,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB;AAFT,CAAD,CAA5B;AAKA,eAAeL,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contacts-reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactReducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    devTools: process.env.NODE_ENV ==='development',\r\n})\r\n\r\nexport default store;\r\n\r\n// const initialState = {\r\n// //     contacts: {\r\n// //         name: '',\r\n// //         number: '',\r\n// //     }, \r\n// //     showNoty: false,\r\n    \r\n// // }\r\n\r\n// const reducer = (state = initialState, {type,payload}) => {\r\n//     switch(type) {\r\n//         case 'contacts/Add' :\r\n//             return {\r\n//                 ...state,\r\n\r\n//                 contacts: {\r\n//                     ...state.constacts,\r\n//                         name: state.contacts.name + payload,\r\n//             }\r\n//         }\r\n//             // console.log(state);\r\n//             // return {\r\n//             //     if (initialState.contacts.find((item)=>item.name===payload.contact.name)) {\r\n//             //         this.initialState.setState({showNoty: true})\r\n//             //             setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n//             //     } else {\r\n//             //         this.initialState.setState(prevState=>({\r\n//             //             contacts: [payload, ...prevState.contacts],\r\n//             //         }))\r\n//             //     }\r\n//             // }\r\n        \r\n \r\n//                 // this.setState(prevState=>{\r\n//                 //     return{\r\n//                 //         contacts: prevState.contacts.filter(({id})=>id !== payload),\r\n//                 //         filter: '',\r\n//                 //     }\r\n//                 // })  \r\n            \r\n//         case 'contacts/Remove' :\r\n//             return {\r\n//                 contacts: state.constacts - payload,\r\n//             }\r\n//             // console.log('remove');\r\n            \r\n//         default : return state;    \r\n//     }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}