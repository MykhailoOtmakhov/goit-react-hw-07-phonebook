{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts-reducer';\nimport logger from 'redux-logger'; // import storage from 'redux-persist/lib/storage'\n\nimport { // persistStore,\n// persistReducer,\nFLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist'; // const contactsPersistConfig = {\n//     key: 'contacts',\n//     storage,\n//     blacklist: ['filter'],\n// }\n\nconst myMiddleware = store => next => action => {\n  next(action);\n};\n\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n}), myMiddleware, logger];\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n}); // const persistor = persistStore(store)\n\nexport default // { \nstore; // , persistor };","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-07-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","contactsReducer","logger","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","myMiddleware","store","next","action","middleware","serializableCheck","ignoredActions","reducer","contacts","devTools","process","env","NODE_ENV"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,SACI;AACA;AACAC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT,C,CAWA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAE9CD,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACD,CAHD;;AAIA,MAAMC,UAAU,GAAG,CACjB,GAAGb,oBAAoB,CAAC;AACtBc,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACZ,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,EAMjBC,YANiB,EAOjBP,MAPiB,CAAnB;AAUA,MAAMQ,KAAK,GAAGX,cAAc,CAAC;AACzBiB,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAEhB;AADL,GADgB;AAIzBY,EAAAA,UAJyB;AAKzBK,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB;AALT,CAAD,CAA5B,C,CAQA;;AAEA,eACA;AACEX,KAFF,C,CAGE","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts-reducer'\r\nimport logger from 'redux-logger'\r\n// import storage from 'redux-persist/lib/storage'\r\nimport {\r\n    // persistStore,\r\n    // persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n  } from 'redux-persist';\r\n\r\n// const contactsPersistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// }\r\n\r\nconst myMiddleware = store => next => action => {\r\n\r\n  next(action);\r\n}\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  }), \r\n  myMiddleware,\r\n  logger,\r\n]\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV ==='development',\r\n})\r\n\r\n// const persistor = persistStore(store)\r\n\r\nexport default \r\n// { \r\n  store\r\n  // , persistor };\r\n"]},"metadata":{},"sourceType":"module"}