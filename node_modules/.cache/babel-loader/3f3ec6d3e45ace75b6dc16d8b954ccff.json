{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.js\";\n// import React, { Component } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n// import styles from './ContactForm.module.css';\n// export default class ContactForm extends Component {\n//     state = {\n//         name: '',\n//         number: '',\n//     }\n//     nameInputId = uuidv4();\n//     numberInputId = uuidv4();\n//     handleInputChange=evt=>{\n//       const {name, value}= evt.currentTarget;\n//       this.setState({\n//         [name]: value,\n//       })\n//     }\n//     handleSubmit=evt=>{\n//         evt.preventDefault();\n//         console.log(this.state);\n//         this.props.onAddContact(this.state);\n//         this.reset()\n//     }\n//     reset=()=>{\n//         this.setState({name: '', number: '',});\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <form \n//                   onSubmit={this.handleSubmit}\n//                   className={styles.form}>\n//                   <label \n//                     className={styles.label}\n//                     htmlFor={this.nameInputId}>\n//                         Name\n//                     <input \n//                       className={styles.input}\n//                       type=\"text\"\n//                       name=\"name\"\n//                       value={this.state.name}\n//                       onChange={this.handleInputChange}\n//                       id={this.nameInputId}\n//                     />\n//                   </label>\n//                   <label \n//                   className={styles.label}\n//                   htmlFor={this.numberInputId}>\n//                       Number\n//                     <input \n//                       className={styles.input}\n//                       type=\"tel\"\n//                       name=\"number\"\n//                       value={this.state.number}\n//                       onChange={this.handleInputChange}\n//                       id={this.numberInputId}\n//                     />\n//                   </label>\n//                   <button \n//                     className={styles.button}\n//                     type=\"submit\" \n//                     onClick={this.handleSubmit}\n//                   >\n//                     Add contact\n//                   </button>\n//                 </form>\n//             </div>\n//         )\n//     }\n// }\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport Notification from '../Notification/Notification';\nimport contactsActions from '../../redux/contacts-actions';\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // name: '',\n      // number: '',\n      message: null\n    };\n\n    this.handleInputChange = evt => {\n      const {\n        name,\n        value\n      } = evt.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.getNotyfication = note => {\n      this.setState({\n        message: note\n      });\n      setTimeout(() => {\n        this.setState({\n          message: null\n        });\n      }, 3000);\n    };\n\n    this.handleSubmit = evt => {\n      const {\n        name,\n        number\n      } = this.state;\n      evt.preventDefault(); // if (name === '') {\n      //   this.getNotyfication('Enter name!');\n      //   return;\n      // }\n      // if (number === '') {\n      //   this.getNotyfication('Enter number!');\n      //   return;\n      // }\n      // if (this.props.contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\n      //   this.getNotyfication('Contact already exist!');\n      //   return;\n      // }\n\n      console.log(this.state);\n      this.props.onSubmit(this.state.message);\n      this.setState({\n        message: ''\n      });\n    };\n  }\n\n  // reset=()=>{\n  //     this.setState({name: '', number: '',});\n  // }\n  render() {\n    const {\n      name,\n      number,\n      message\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.nameInputId,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleInputChange,\n            id: this.nameInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.numberInputId,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"tel\",\n            name: \"number\",\n            value: this.state.number,\n            onChange: this.handleInputChange,\n            id: this.numberInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\" // onClick={this.handleSubmit}\n          ,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this);\n  }\n\n} // const mapStateToProps = (state) => ({\n//   contacts: state.contacts,\n// })\n\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","v4","uuidv4","styles","connect","Notification","contactsActions","ContactForm","state","message","handleInputChange","evt","name","value","target","setState","getNotyfication","note","setTimeout","handleSubmit","number","preventDefault","console","log","props","onSubmit","render","form","label","nameInputId","input","numberInputId","button","mapDispatchToProps","dispatch","addContact"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import styles from './ContactForm.module.css';\r\n\r\n// export default class ContactForm extends Component {\r\n//     state = {\r\n//         name: '',\r\n//         number: '',\r\n//     }\r\n\r\n\r\n//     nameInputId = uuidv4();\r\n//     numberInputId = uuidv4();\r\n\r\n//     handleInputChange=evt=>{\r\n//       const {name, value}= evt.currentTarget;\r\n//       this.setState({\r\n//         [name]: value,\r\n//       })\r\n//     }\r\n\r\n//     handleSubmit=evt=>{\r\n//         evt.preventDefault();\r\n//         console.log(this.state);\r\n//         this.props.onAddContact(this.state);\r\n//         this.reset()\r\n//     }\r\n\r\n//     reset=()=>{\r\n//         this.setState({name: '', number: '',});\r\n//     }\r\n    \r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <form \r\n//                   onSubmit={this.handleSubmit}\r\n//                   className={styles.form}>\r\n//                   <label \r\n//                     className={styles.label}\r\n//                     htmlFor={this.nameInputId}>\r\n//                         Name\r\n//                     <input \r\n//                       className={styles.input}\r\n//                       type=\"text\"\r\n//                       name=\"name\"\r\n//                       value={this.state.name}\r\n//                       onChange={this.handleInputChange}\r\n//                       id={this.nameInputId}\r\n//                     />\r\n//                   </label>\r\n//                   <label \r\n//                   className={styles.label}\r\n//                   htmlFor={this.numberInputId}>\r\n//                       Number\r\n//                     <input \r\n//                       className={styles.input}\r\n//                       type=\"tel\"\r\n//                       name=\"number\"\r\n//                       value={this.state.number}\r\n//                       onChange={this.handleInputChange}\r\n//                       id={this.numberInputId}\r\n//                     />\r\n//                   </label>\r\n//                   <button \r\n//                     className={styles.button}\r\n//                     type=\"submit\" \r\n//                     onClick={this.handleSubmit}\r\n//                   >\r\n//                     Add contact\r\n//                   </button>\r\n//                 </form>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport Notification from '../Notification/Notification'\r\nimport contactsActions from '../../redux/contacts-actions'\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        // name: '',\r\n        // number: '',\r\n        message: null,\r\n    }\r\n\r\n    // nameInputId = uuidv4();\r\n    // numberInputId = uuidv4();\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.target;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    getNotyfication = (note) =>{\r\n      this.setState({ message: note});\r\n      setTimeout(() => {\r\n        this.setState ({ message: null});\r\n      }, 3000);\r\n    }\r\n\r\n    \r\n\r\n    handleSubmit=evt=>{\r\n      const { name, number } = this.state;\r\n        evt.preventDefault();\r\n\r\n        // if (name === '') {\r\n        //   this.getNotyfication('Enter name!');\r\n        //   return;\r\n        // }\r\n\r\n        // if (number === '') {\r\n        //   this.getNotyfication('Enter number!');\r\n        //   return;\r\n        // }\r\n\r\n        // if (this.props.contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\r\n        //   this.getNotyfication('Contact already exist!');\r\n        //   return;\r\n        // }\r\n\r\n        console.log(this.state);\r\n        this.props.onSubmit(this.state.message);\r\n        this.setState({ message:'' });\r\n    }\r\n\r\n    // reset=()=>{\r\n    //     this.setState({name: '', number: '',});\r\n    // }\r\n    \r\n    render() {\r\n      const { name, number, message } = this.state;\r\n        return (\r\n            <div>\r\n              <Notification \r\n                message={message} />\r\n                <form \r\n                  onSubmit={this.handleSubmit}\r\n                  className={styles.form}>\r\n                  <label \r\n                    className={styles.label}\r\n                    htmlFor={this.nameInputId}>\r\n                        Name\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.nameInputId}\r\n                    />\r\n                  </label>\r\n                  <label \r\n                  className={styles.label}\r\n                  htmlFor={this.numberInputId}>\r\n                      Number\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"tel\"\r\n                      name=\"number\"\r\n                      value={this.state.number}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.numberInputId}\r\n                    />\r\n                  </label>\r\n                  <button \r\n                    className={styles.button}\r\n                    type=\"submit\" \r\n                    // onClick={this.handleSubmit}\r\n                  >\r\n                    Add contact\r\n                  </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: state.contacts,\r\n// })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number)),\r\n})\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(ContactForm)\r\n"]},"metadata":{},"sourceType":"module"}