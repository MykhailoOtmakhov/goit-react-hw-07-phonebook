{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: ''\n    };\n    this.nameInputId = uuidv4();\n    this.numberInputId = uuidv4();\n\n    this.handleInputChange = evt => {\n      const {\n        name,\n        value\n      } = evt.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      console.log(this.state);\n\n      if (this.state.name === name) {\n        this.props.onAddContact(this.state.name);\n        this.setState({\n          showNoty: true\n        });\n        setTimeout(() => this.setState({\n          showNoty: false\n        }), 3000);\n      } else {\n        this.setState(prevState => ({\n          items: [items, ...prevState.items]\n        }));\n      }\n\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.nameInputId,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleInputChange,\n            id: this.nameInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.numberInputId,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"tel\",\n            name: \"number\",\n            value: this.state.number,\n            onChange: this.handleInputChange,\n            id: this.numberInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: ({\n    name,\n    number\n  }) => dispatch(contactsActions.addContact({\n    name,\n    number\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","v4","uuidv4","styles","connect","contactsActions","ContactForm","state","name","number","nameInputId","numberInputId","handleInputChange","evt","value","currentTarget","setState","handleSubmit","preventDefault","console","log","props","onAddContact","showNoty","setTimeout","prevState","items","reset","render","form","label","input","button","mapDispatchToProps","dispatch","addContact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\nimport {connect} from 'react-redux'\r\nimport contactsActions from '../../redux/contacts-actions'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.currentTarget;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    handleSubmit=evt=>{\r\n        evt.preventDefault();\r\n        console.log(this.state);\r\n        if (this.state.name === name) {\r\n          this.props.onAddContact(this.state.name);\r\n          this.setState({showNoty: true})\r\n            setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n        } else {\r\n          this.setState(prevState=>({\r\n            items: [items, ...prevState.items],\r\n          }))\r\n        }\r\n        this.reset()\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({name: '', number: '',});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form \r\n                  onSubmit={this.handleSubmit}\r\n                  className={styles.form}>\r\n                  <label \r\n                    className={styles.label}\r\n                    htmlFor={this.nameInputId}>\r\n                        Name\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.nameInputId}\r\n                    />\r\n                  </label>\r\n                  <label \r\n                  className={styles.label}\r\n                  htmlFor={this.numberInputId}>\r\n                      Number\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"tel\"\r\n                      name=\"number\"\r\n                      value={this.state.number}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.numberInputId}\r\n                    />\r\n                  </label>\r\n                  <button \r\n                    className={styles.button}\r\n                    type=\"submit\" \r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Add contact\r\n                  </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  onAddContact: ({name, number}) => dispatch(contactsActions.addContact({name,number}))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(ContactForm)\r\n\r\n"]},"metadata":{},"sourceType":"module"}