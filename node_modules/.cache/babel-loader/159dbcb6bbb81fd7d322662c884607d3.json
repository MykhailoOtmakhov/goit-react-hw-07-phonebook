{"ast":null,"code":"import _toConsumableArray from\"D:/projects/GitHub/goit-react-hw-07-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import contactsReducer from'./contacts-reducer';import logger from'redux-logger';// import storage from 'redux-persist/lib/storage'\nimport{// persistStore,\n// persistReducer,\nFLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';// const contactsPersistConfig = {\n//     key: 'contacts',\n//     storage,\n//     blacklist: ['filter'],\n// }\nvar myMiddleware=function myMiddleware(store){return function(next){return function(action){next(action);};};};var middleware=[].concat(_toConsumableArray(getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}})),[myMiddleware,logger]);var store=configureStore({reducer:{contacts:contactsReducer},middleware:middleware,devTools:process.env.NODE_ENV==='development'});// const persistor = persistStore(store)\nexport default// { \nstore;// , persistor };","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-07-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","contactsReducer","logger","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","myMiddleware","store","next","action","middleware","serializableCheck","ignoredActions","reducer","contacts","devTools","process","env","NODE_ENV"],"mappings":"4KAAA,OAASA,cAAT,CAAyBC,oBAAzB,KAAqD,kBAArD,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA;AACA,OACI;AACA;AACAC,KAHJ,CAIIC,SAJJ,CAKIC,KALJ,CAMIC,OANJ,CAOIC,KAPJ,CAQIC,QARJ,KASS,eATT,CAWA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,QAAI,UAAAC,IAAI,QAAI,UAAAC,MAAM,CAAI,CAE9CD,IAAI,CAACC,MAAD,CAAJ,CACD,CAHiC,EAAR,EAA1B,CAIA,GAAMC,CAAAA,UAAU,8BACXb,oBAAoB,CAAC,CACtBc,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACZ,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADG,CAAD,CADT,GAMdC,YANc,CAOdP,MAPc,EAAhB,CAUA,GAAMQ,CAAAA,KAAK,CAAGX,cAAc,CAAC,CACzBiB,OAAO,CAAE,CACLC,QAAQ,CAAEhB,eADL,CADgB,CAIzBY,UAAU,CAAVA,UAJyB,CAKzBK,QAAQ,CAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAwB,aALT,CAAD,CAA5B,CAQA;AAEA,cACA;AACEX,KAFF,CAGE","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts-reducer'\r\nimport logger from 'redux-logger'\r\n// import storage from 'redux-persist/lib/storage'\r\nimport {\r\n    // persistStore,\r\n    // persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n  } from 'redux-persist';\r\n\r\n// const contactsPersistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// }\r\n\r\nconst myMiddleware = store => next => action => {\r\n\r\n  next(action);\r\n}\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  }), \r\n  myMiddleware,\r\n  logger,\r\n]\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV ==='development',\r\n})\r\n\r\n// const persistor = persistStore(store)\r\n\r\nexport default \r\n// { \r\n  store\r\n  // , persistor };\r\n"]},"metadata":{},"sourceType":"module"}