{"ast":null,"code":"import { createStore } from 'redux';\nconst initialState = {\n  contacts: [],\n  showNoty: false,\n  name: '',\n  number: ''\n};\n\nconst reducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case 'contacts/Add':\n      if (state.contacts.find(item => item.name === name)) {\n        this.setState({\n          showNoty: true\n        });\n        setTimeout(() => this.setState({\n          showNoty: false\n        }), 3000);\n      } else {\n        initialState.setState(prevState => ({\n          contacts: [payload, ...prevState.contacts]\n        }));\n      }\n\n    case 'contacts/Remove':\n      return this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(({\n            id\n          }) => id !== payload),\n          filter: ''\n        };\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["createStore","initialState","contacts","showNoty","name","number","reducer","state","type","payload","find","item","setState","setTimeout","prevState","filter","id","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,QAAQ,EAAE,KAFO;AAGjBC,EAAAA,IAAI,EAAE,EAHW;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuB;AAACO,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAvB,KAA0C;AACtD,UAAOD,IAAP;AACI,SAAK,cAAL;AACQ,UAAID,KAAK,CAACL,QAAN,CAAeQ,IAAf,CAAqBC,IAAD,IAAQA,IAAI,CAACP,IAAL,KAAYA,IAAxC,CAAJ,EAAmD;AAC/C,aAAKQ,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACIU,QAAAA,UAAU,CAAC,MAAM,KAAKD,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAAE;AAAX,SAAd,CAAP,EAAyC,IAAzC,CAAV;AACP,OAHD,MAGO;AACHF,QAAAA,YAAY,CAACW,QAAb,CAAsBE,SAAS,KAAG;AAC9BZ,UAAAA,QAAQ,EAAE,CAACO,OAAD,EAAU,GAAGK,SAAS,CAACZ,QAAvB;AADoB,SAAH,CAA/B;AAGH;;AAET,SAAK,iBAAL;AACI,aACI,KAAKU,QAAL,CAAcE,SAAS,IAAE;AACrB,eAAM;AACFZ,UAAAA,QAAQ,EAAEY,SAAS,CAACZ,QAAV,CAAmBa,MAAnB,CAA0B,CAAC;AAACC,YAAAA;AAAD,WAAD,KAAQA,EAAE,KAAKP,OAAzC,CADR;AAEFM,UAAAA,MAAM,EAAE;AAFN,SAAN;AAIH,OALD,CADJ;;AASJ;AAAU,aAAOR,KAAP;AArBd;AAuBH,CAxBD;;AA0BA,MAAMU,KAAK,GAAGjB,WAAW,CAACM,OAAD,CAAzB;AAEA,eAAeW,KAAf","sourcesContent":["import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n    contacts: [], \r\n    showNoty: false,\r\n    name: '',\r\n    number: '',\r\n}\r\n\r\nconst reducer = (state = initialState, {type,payload}) => {\r\n    switch(type) {\r\n        case 'contacts/Add' :\r\n                if (state.contacts.find((item)=>item.name===name)) {\r\n                    this.setState({showNoty: true})\r\n                        setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n                } else {\r\n                    initialState.setState(prevState=>({\r\n                        contacts: [payload, ...prevState.contacts],\r\n                    }))\r\n                }\r\n        \r\n        case 'contacts/Remove' :\r\n            return (\r\n                this.setState(prevState=>{\r\n                    return{\r\n                        contacts: prevState.contacts.filter(({id})=>id !== payload),\r\n                        filter: '',\r\n                    }\r\n                })  \r\n            )\r\n            \r\n        default : return state;    \r\n    }\r\n}\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}