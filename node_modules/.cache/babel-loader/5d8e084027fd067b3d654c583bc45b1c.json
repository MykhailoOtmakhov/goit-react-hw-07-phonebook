{"ast":null,"code":"import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\nimport contactReducer from './contacts-reducer';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst persistConfig = {\n  key: 'rootor',\n  storage\n};\nconsole.log(getDefaultMiddleware());\nconst middleware = [...getDefaultMiddleware(), logger];\nconst rootReducer = combineReducers({\n  contacts: contactReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n});\nconst persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","combineReducers","contactReducer","logger","storage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","console","log","middleware","rootReducer","contacts","persistedReducer","store","reducer","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,EAA+CC,eAA/C,QAAqE,kBAArE;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAWA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,QADa;AAElBV,EAAAA;AAFkB,CAAtB;AAKAW,OAAO,CAACC,GAAR,CAAYhB,oBAAoB,EAAhC;AAEA,MAAMiB,UAAU,GAAG,CAAC,GAAGjB,oBAAoB,EAAxB,EAA4BG,MAA5B,CAAnB;AAEA,MAAMe,WAAW,GAAGjB,eAAe,CAAC;AAChCkB,EAAAA,QAAQ,EAAEjB;AADsB,CAAD,CAAnC;AAIA,MAAMkB,gBAAgB,GAAGd,cAAc,CAACO,aAAD,EAAgBK,WAAhB,CAAvC;AAEA,MAAMG,KAAK,GAAGtB,cAAc,CAAC;AACzBuB,EAAAA,OAAO,EAAEF,gBADgB;AAEzBH,EAAAA,UAFyB;AAGzBM,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB;AAHT,CAAD,CAA5B;AAMA,MAAMC,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA9B;AAEA,eAAe;AAAEA,EAAAA,KAAF;AAASM,EAAAA;AAAT,CAAf","sourcesContent":["import { configureStore, getDefaultMiddleware, combineReducers} from '@reduxjs/toolkit';\r\nimport contactReducer from './contacts-reducer'\r\nimport logger from 'redux-logger'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n  } from 'redux-persist'\r\n\r\nconst persistConfig = {\r\n    key: 'rootor',\r\n    storage,\r\n}\r\n\r\nconsole.log(getDefaultMiddleware());\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger]\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactReducer,\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV ==='development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default { store, persistor };\r\n\r\n"]},"metadata":{},"sourceType":"module"}