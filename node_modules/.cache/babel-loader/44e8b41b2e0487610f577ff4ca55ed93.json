{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\nconst {\n  addContactRequest,\n  addContactSuccess,\n  addContactError\n} = actions;\nconst items = createReducer([], {\n  addContactSuccess: (state, {\n    payload\n  }) => [...state, payload],\n  // [actions.addContact]: (state,{ payload }) => [...state, payload],\n  [actions.removeContact]: (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload)\n});\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, {\n    payload\n  }) => payload\n});\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-07-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createReducer","actions","addContactRequest","addContactSuccess","addContactError","items","state","payload","removeContact","filter","id","changeFilter","_"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAM;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA,iBAArB;AAAwCC,EAAAA;AAAxC,IAA4DH,OAAlE;AAEA,MAAMI,KAAK,GAAGL,aAAa,CAAC,EAAD,EAAK;AAC5BG,EAAAA,iBAAiB,EAAE,CAACG,KAAD,EAAO;AAAEC,IAAAA;AAAF,GAAP,KAAuB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CADd;AAE5B;AACA,GAACN,OAAO,CAACO,aAAT,GAAyB,CAACF,KAAD,EAAO;AAAEC,IAAAA;AAAF,GAAP,KAAuBD,KAAK,CAACG,MAAN,CAAa,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAQA,EAAE,KAAKH,OAA5B;AAHpB,CAAL,CAA3B;AAMA,MAAME,MAAM,GAAGT,aAAa,CAAC,EAAD,EAAK;AAC7B,GAACC,OAAO,CAACU,YAAT,GAAwB,CAACC,CAAD,EAAI;AAAEL,IAAAA;AAAF,GAAJ,KAAoBA;AADf,CAAL,CAA5B;AAIA,eAAeR,eAAe,CAAC;AAC3BM,EAAAA,KAD2B;AAE3BI,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport actions from './contacts-actions'\r\n\r\nconst { addContactRequest, addContactSuccess, addContactError } = actions;\r\n\r\nconst items = createReducer([], {\r\n    addContactSuccess: (state,{ payload }) => [...state, payload],\r\n    // [actions.addContact]: (state,{ payload }) => [...state, payload],\r\n    [actions.removeContact]: (state,{ payload }) => state.filter(({id})=>id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload, \r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})\r\n"]},"metadata":{},"sourceType":"module"}