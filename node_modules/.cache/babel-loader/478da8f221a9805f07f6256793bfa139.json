{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nexport default class ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {// name: '',\n      // number: '',\n    };\n    this.nameInputId = uuidv4();\n    this.numberInputId = uuidv4();\n\n    this.handleInputChange = evt => {\n      const {\n        name,\n        value\n      } = evt.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      console.log(this.state);\n      this.props.onAddContact(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.nameInputId,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleInputChange,\n            id: this.nameInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.numberInputId,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"tel\",\n            name: \"number\",\n            value: this.state.number,\n            onChange: this.handleInputChange,\n            id: this.numberInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n} // import React from 'react';\n// import ContactsItem from '../ContactsItem/ContactsItem';\n// import PropTypes from 'prop-types'\n// import { CSSTransition, TransitionGroup } from 'react-transition-group'\n// import styles from './Contacts.module.css'\n// import { connect } from 'react-redux';\n// import contactsActions from '../../redux/contacts-actions'\n// const Contacts = ({contacts,onRemoveContact}) => (\n//     // return(\n//         <TransitionGroup \n//             component=\"ul\" \n//             className=\"ContactsList\"\n//             >\n//                 <h2>Contacts</h2>\n//                 {contacts.map(({id,name,number})=>(\n//                     <CSSTransition \n//                         key={id}\n//                         timeout={2500}\n//                         classNames={styles}\n//                         >\n//                         <ContactsItem \n//                             id={id}\n//                             name={name}\n//                             number={number}\n//                             onRemove={()=>onRemoveContact(id)}\n//                         />\n//                     </CSSTransition>\n//                 ))}\n//         </TransitionGroup>                       \n//     // )\n// )\n// Contacts.propTypes={\n//     id:PropTypes.string,\n//     name:PropTypes.string,\n//     number:PropTypes.string,\n// }\n// Contacts.defaultProps = {\n//     id: '',\n//     name: '',\n//     number: '',\n// }\n// const getVisibleContacts=(allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n//   return allContacts.filter(({name})=>\n//     name.toLowerCase().includes(normalizedFilter),\n//   )\n// }\n// const mapStateToProps =({ contacts: {items, filter}})=> ({\n//     contacts: getVisibleContacts(items, filter),\n// })\n// const mapDispatchToProps = dispatch => ({\n//     onRemoveContact: (id) => dispatch(contactsActions.removeContact(id))\n// })\n// export default connect(mapStateToProps, mapDispatchToProps)(Contacts)","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","v4","uuidv4","styles","ContactForm","state","nameInputId","numberInputId","handleInputChange","evt","name","value","currentTarget","setState","handleSubmit","preventDefault","console","log","props","onAddContact","reset","number","render","form","label","input","button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        // name: '',\r\n        // number: '',\r\n    }\r\n\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.currentTarget;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    handleSubmit=evt=>{\r\n        evt.preventDefault();\r\n        console.log(this.state);\r\n        this.props.onAddContact(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({name: '', number: '',});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form \r\n                  onSubmit={this.handleSubmit}\r\n                  className={styles.form}>\r\n                  <label \r\n                    className={styles.label}\r\n                    htmlFor={this.nameInputId}>\r\n                        Name\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.nameInputId}\r\n                    />\r\n                  </label>\r\n                  <label \r\n                  className={styles.label}\r\n                  htmlFor={this.numberInputId}>\r\n                      Number\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"tel\"\r\n                      name=\"number\"\r\n                      value={this.state.number}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.numberInputId}\r\n                    />\r\n                  </label>\r\n                  <button \r\n                    className={styles.button}\r\n                    type=\"submit\" \r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Add contact\r\n                  </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// import React from 'react';\r\n// import ContactsItem from '../ContactsItem/ContactsItem';\r\n// import PropTypes from 'prop-types'\r\n// import { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n// import styles from './Contacts.module.css'\r\n// import { connect } from 'react-redux';\r\n// import contactsActions from '../../redux/contacts-actions'\r\n\r\n// const Contacts = ({contacts,onRemoveContact}) => (\r\n//     // return(\r\n//         <TransitionGroup \r\n//             component=\"ul\" \r\n//             className=\"ContactsList\"\r\n//             >\r\n//                 <h2>Contacts</h2>\r\n//                 {contacts.map(({id,name,number})=>(\r\n//                     <CSSTransition \r\n//                         key={id}\r\n//                         timeout={2500}\r\n//                         classNames={styles}\r\n//                         >\r\n//                         <ContactsItem \r\n//                             id={id}\r\n//                             name={name}\r\n//                             number={number}\r\n//                             onRemove={()=>onRemoveContact(id)}\r\n//                         />\r\n//                     </CSSTransition>\r\n//                 ))}\r\n//         </TransitionGroup>                       \r\n//     // )\r\n// )\r\n\r\n// Contacts.propTypes={\r\n//     id:PropTypes.string,\r\n//     name:PropTypes.string,\r\n//     number:PropTypes.string,\r\n// }\r\n// Contacts.defaultProps = {\r\n//     id: '',\r\n//     name: '',\r\n//     number: '',\r\n// }\r\n\r\n// const getVisibleContacts=(allContacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return allContacts.filter(({name})=>\r\n//     name.toLowerCase().includes(normalizedFilter),\r\n//   )\r\n// }\r\n\r\n// const mapStateToProps =({ contacts: {items, filter}})=> ({\r\n//     contacts: getVisibleContacts(items, filter),\r\n// })\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     onRemoveContact: (id) => dispatch(contactsActions.removeContact(id))\r\n// })\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Contacts)\r\n"]},"metadata":{},"sourceType":"module"}