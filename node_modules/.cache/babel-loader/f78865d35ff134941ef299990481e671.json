{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\nimport Notification from './';\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: '',\n      message: null\n    };\n    this.nameInputId = uuidv4();\n    this.numberInputId = uuidv4();\n\n    this.handleInputChange = evt => {\n      const {\n        name,\n        value\n      } = evt.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.getNotification = notification => {\n      this.setState({\n        message: notification\n      });\n      setTimeout(() => {\n        this.setState({\n          message: null\n        });\n      }, 3000);\n    };\n\n    this.handleSubmit = evt => {\n      const {\n        name,\n        number\n      } = this.state;\n      evt.preventDefault(); // if (this.props.contacts.items.find((item)=>item.name===this.state.name)) {\n      //       this.setState({showNoty: true})\n      //         setTimeout(() => this.setState({showNoty: false}), 3000)      \n      //     } \n\n      if (name === '') {\n        this.getNotification('Enter the name!');\n        return;\n      }\n\n      if (number === '') {\n        this.getNotification('Enter the number!');\n        return;\n      }\n\n      if (this.props.contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n        this.getNotification('Contact already exist!');\n        return;\n      }\n\n      console.log(this.state);\n      this.props.onAddContact(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number,\n      message\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.nameInputId,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            onChange: this.handleInputChange,\n            id: this.nameInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.numberInputId,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"tel\",\n            name: \"number\",\n            value: number,\n            onChange: this.handleInputChange,\n            id: this.numberInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: ({\n    name,\n    number\n  }) => dispatch(contactsActions.addContact({\n    name,\n    number\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","v4","uuidv4","styles","connect","contactsActions","Notification","ContactForm","state","name","number","message","nameInputId","numberInputId","handleInputChange","evt","value","currentTarget","setState","getNotification","notification","setTimeout","handleSubmit","preventDefault","props","contacts","find","item","toLowerCase","console","log","onAddContact","reset","render","form","label","input","button","mapDispatchToProps","dispatch","addContact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\nimport {connect} from 'react-redux'\r\nimport contactsActions from '../../redux/contacts-actions'\r\nimport Notification from './'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        message: null,\r\n    }\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.currentTarget;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    getNotification = (notification) =>{\r\n      this.setState ({message: notification});\r\n      setTimeout(() => {\r\n        this.setState({message: null});\r\n      }, 3000)\r\n    }\r\n\r\n    handleSubmit=evt=>{\r\n      const { name, number } = this.state;\r\n        evt.preventDefault();\r\n        // if (this.props.contacts.items.find((item)=>item.name===this.state.name)) {\r\n        //       this.setState({showNoty: true})\r\n        //         setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n        //     } \r\n        if (name === '') {\r\n          this.getNotification('Enter the name!');\r\n          return;\r\n        }\r\n\r\n        if (number === '') {\r\n          this.getNotification('Enter the number!');\r\n          return;\r\n        }\r\n\r\n        if (this.props.contacts.find((item)=>item.name.toLowerCase() === name.toLowerCase())) {\r\n          this.getNotification('Contact already exist!');\r\n          return;\r\n        }\r\n\r\n\r\n        console.log(this.state);\r\n        this.props.onAddContact(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({name: '', number: '',});\r\n    }\r\n    \r\n    render() {\r\n      const { name, number, message } = this.state;\r\n        return (\r\n            <div>\r\n              <Notification message={message}/>\r\n                <form \r\n                  onSubmit={this.handleSubmit}\r\n                  className={styles.form}>\r\n                  <label \r\n                    className={styles.label}\r\n                    htmlFor={this.nameInputId}>\r\n                        Name\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.nameInputId}\r\n                    />\r\n                  </label>\r\n                  <label \r\n                  className={styles.label}\r\n                  htmlFor={this.numberInputId}>\r\n                      Number\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"tel\"\r\n                      name=\"number\"\r\n                      value={number}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.numberInputId}\r\n                    />\r\n                  </label>\r\n                  <button \r\n                    className={styles.button}\r\n                    type=\"submit\" \r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Add contact\r\n                  </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  onAddContact: ({name, number}) => dispatch(contactsActions.addContact({name,number}))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(ContactForm)\r\n\r\n"]},"metadata":{},"sourceType":"module"}