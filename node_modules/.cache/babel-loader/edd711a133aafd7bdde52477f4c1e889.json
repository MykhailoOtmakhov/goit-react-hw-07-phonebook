{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.js\";\nimport React, { Component } from 'react'; // import { v4 as uuidv4 } from 'uuid';\n\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\nimport Notification from './components/Notification/Notification';\nimport { CSSTransition } from 'react-transition-group';\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleInputChange = evt => {\n      const {\n        name,\n        value\n      } = evt.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      console.log(this.state);\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: showNoty,\n        timeout: 250,\n        classNames: \"notification\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.nameInputId,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleInputChange,\n            id: this.nameInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.numberInputId,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"tel\",\n            name: \"number\",\n            value: this.state.number,\n            onChange: this.handleInputChange,\n            id: this.numberInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({\n    name,\n    number\n  }) => dispatch(contactsActions.addContact(name, number))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","styles","connect","contactsActions","Notification","CSSTransition","ContactForm","state","name","number","handleInputChange","evt","value","currentTarget","setState","handleSubmit","preventDefault","console","log","props","onSubmit","reset","render","showNoty","form","label","nameInputId","input","numberInputId","button","mapDispatchToProps","dispatch","addContact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts-actions'\r\n\r\nimport Notification from './components/Notification/Notification'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n          name: '',\r\n          number: '',   \r\n    }\r\n\r\n    // nameInputId = uuidv4();\r\n    // numberInputId = uuidv4();\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.currentTarget;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    handleSubmit=evt=>{\r\n        evt.preventDefault();\r\n        console.log(this.state);\r\n        this.props.onSubmit(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({name: '', number: '',});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              \r\n              <CSSTransition\r\n          in={showNoty} \r\n          timeout={250}\r\n          classNames=\"notification\"\r\n          unmountOnExit>\r\n            <Notification />\r\n        </CSSTransition>\r\n                \r\n                <form \r\n                  onSubmit={this.handleSubmit}\r\n                  className={styles.form}>\r\n                  <label \r\n                    className={styles.label}\r\n                    htmlFor={this.nameInputId}>\r\n                        Name\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.nameInputId}\r\n                    />\r\n                  </label>\r\n                  <label \r\n                  className={styles.label}\r\n                  htmlFor={this.numberInputId}>\r\n                      Number\r\n                    <input \r\n                      className={styles.input}\r\n                      type=\"tel\"\r\n                      name=\"number\"\r\n                      value={this.state.number}\r\n                      onChange={this.handleInputChange}\r\n                      id={this.numberInputId}\r\n                    />\r\n                  </label>\r\n                  <button \r\n                    className={styles.button}\r\n                    type=\"submit\" \r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Add contact\r\n                  </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({name,number}) => dispatch(contactsActions.addContact(name,number))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm)\r\n\r\n"]},"metadata":{},"sourceType":"module"}