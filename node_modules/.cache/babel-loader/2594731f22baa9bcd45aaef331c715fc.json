{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport types from './contacts-types';\nconst items = createReducer([], {\n  'contacts/Add': (state, {\n    payload\n  }) => [...state, payload],\n  'contacts/Remove': (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload)\n}); // const items = (state = [], {type, payload}) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload];            \n//         case types.REMOVE:\n//             return state.filter(({id})=>id !== payload);\n//         default:\n//             return state;\n//     }\n// }\n\nconst filter = (state = '', {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case types.CHENGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","createReducer","types","items","state","payload","filter","id","type","CHENGE_FILTER"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,MAAMC,KAAK,GAAGF,aAAa,CAAC,EAAD,EAAK;AAC5B,kBAAgB,CAACG,KAAD,EAAO;AAACC,IAAAA;AAAD,GAAP,KAAqB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CADT;AAE5B,qBAAmB,CAACD,KAAD,EAAO;AAACC,IAAAA;AAAD,GAAP,KAAqBD,KAAK,CAACE,MAAN,CAAa,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAQA,EAAE,KAAKF,OAA5B;AAFZ,CAAL,CAA3B,C,CAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,CAACF,KAAK,GAAG,EAAT,EAAa;AAACI,EAAAA,IAAD;AAAOH,EAAAA;AAAP,CAAb,KAAiC;AAC5C,UAAQG,IAAR;AACI,SAAKN,KAAK,CAACO,aAAX;AACI,aAAOJ,OAAP;;AACJ;AACI,aAAOD,KAAP;AAJR;AAMH,CAPD;;AASA,eAAeJ,eAAe,CAAC;AAC3BG,EAAAA,KAD2B;AAE3BG,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\"\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport types from './contacts-types';\r\n\r\nconst items = createReducer([], {\r\n    'contacts/Add': (state,{payload}) => [...state, payload],\r\n    'contacts/Remove': (state,{payload}) => state.filter(({id})=>id !== payload),\r\n})\r\n\r\n// const items = (state = [], {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];            \r\n    \r\n//         case types.REMOVE:\r\n//             return state.filter(({id})=>id !== payload);\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\nconst filter = (state = '', {type, payload}) => {\r\n    switch (type) {\r\n        case types.CHENGE_FILTER:\r\n            return payload;\r\n        default :\r\n            return state;            \r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})"]},"metadata":{},"sourceType":"module"}