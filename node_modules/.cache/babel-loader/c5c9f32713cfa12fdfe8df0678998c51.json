{"ast":null,"code":"import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst initialState = {\n  contacts: {\n    name: '',\n    number: ''\n  },\n  showNoty: false\n};\n\nconst reducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case 'contacts/Add':\n      return { ...state,\n        contacts: { ...state.constacts,\n          name: state.contacts.name + payload\n        }\n      };\n    // console.log(state);\n    // return {\n    //     if (initialState.contacts.find((item)=>item.name===payload.contact.name)) {\n    //         this.initialState.setState({showNoty: true})\n    //             setTimeout(() => this.setState({showNoty: false}), 3000)      \n    //     } else {\n    //         this.initialState.setState(prevState=>({\n    //             contacts: [payload, ...prevState.contacts],\n    //         }))\n    //     }\n    // }\n    // this.setState(prevState=>{\n    //     return{\n    //         contacts: prevState.contacts.filter(({id})=>id !== payload),\n    //         filter: '',\n    //     }\n    // })  \n\n    case 'contacts/Remove':\n      return {\n        contacts: state.constacts - payload\n      };\n    // console.log('remove');\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, composeWithDevTools());\nexport default store;","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["createStore","composeWithDevTools","initialState","contacts","name","number","showNoty","reducer","state","type","payload","constacts","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,EADA;AAENC,IAAAA,MAAM,EAAE;AAFF,GADO;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuB;AAACO,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAvB,KAA0C;AACtD,UAAOD,IAAP;AACI,SAAK,cAAL;AACI,aAAO,EACH,GAAGD,KADA;AAGHL,QAAAA,QAAQ,EAAE,EACN,GAAGK,KAAK,CAACG,SADH;AAEFP,UAAAA,IAAI,EAAEI,KAAK,CAACL,QAAN,CAAeC,IAAf,GAAsBM;AAF1B;AAHP,OAAP;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI;AACA;AACA;AACA;AACA;AACA;;AAER,SAAK,iBAAL;AACI,aAAO;AACHP,QAAAA,QAAQ,EAAEK,KAAK,CAACG,SAAN,GAAkBD;AADzB,OAAP;AAGA;;AAEJ;AAAU,aAAOF,KAAP;AApCd;AAsCH,CAvCD;;AAyCA,MAAMI,KAAK,GAAGZ,WAAW,CAACO,OAAD,EAAUN,mBAAmB,EAA7B,CAAzB;AAEA,eAAeW,KAAf","sourcesContent":["import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst initialState = {\r\n    contacts: {\r\n        name: '',\r\n        number: '',\r\n    }, \r\n    showNoty: false,\r\n    \r\n}\r\n\r\nconst reducer = (state = initialState, {type,payload}) => {\r\n    switch(type) {\r\n        case 'contacts/Add' :\r\n            return {\r\n                ...state,\r\n\r\n                contacts: {\r\n                    ...state.constacts,\r\n                        name: state.contacts.name + payload,\r\n            }\r\n        }\r\n            // console.log(state);\r\n            // return {\r\n            //     if (initialState.contacts.find((item)=>item.name===payload.contact.name)) {\r\n            //         this.initialState.setState({showNoty: true})\r\n            //             setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n            //     } else {\r\n            //         this.initialState.setState(prevState=>({\r\n            //             contacts: [payload, ...prevState.contacts],\r\n            //         }))\r\n            //     }\r\n            // }\r\n        \r\n \r\n                // this.setState(prevState=>{\r\n                //     return{\r\n                //         contacts: prevState.contacts.filter(({id})=>id !== payload),\r\n                //         filter: '',\r\n                //     }\r\n                // })  \r\n            \r\n        case 'contacts/Remove' :\r\n            return {\r\n                contacts: state.constacts - payload,\r\n            }\r\n            // console.log('remove');\r\n            \r\n        default : return state;    \r\n    }\r\n}\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}