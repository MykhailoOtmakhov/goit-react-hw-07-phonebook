{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\Contacts\\\\Contacts.js\";\nimport React from 'react';\nimport ContactsItem from '../ContactsItem/ContactsItem';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styles from './Contacts.module.css';\n\nconst Contacts = ({\n  contacts,\n  onRemoveContact\n}) => {\n  return /*#__PURE__*/_jsxDEV(TransitionGroup, {\n    component: \"ul\",\n    className: \"ContactsList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this), contacts.map(({\n      id,\n      name,\n      number\n    }) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n      timeout: 2500,\n      classNames: styles,\n      children: /*#__PURE__*/_jsxDEV(ContactsItem, {\n        id: id,\n        name: name,\n        number: number,\n        onRemove: () => onRemoveContact(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Contacts;\nContacts.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string\n};\nContacts.defaultProps = {\n  id: '',\n  name: '',\n  number: ''\n};\nexport default Contacts; // import React from 'react';\n// import ContactsItem from '../ContactsItem/ContactsItem';\n// import PropTypes from 'prop-types'\n// import { CSSTransition, TransitionGroup } from 'react-transition-group'\n// import styles from './Contacts.module.css'\n// import { connect } from 'react-redux';\n// import contactsActions from '../../redux/contacts-actions'\n// const Contacts = ({contacts,onRemoveContact}) => (\n//     // return(\n//         <TransitionGroup \n//             component=\"ul\" \n//             className=\"ContactsList\"\n//             >\n//                 <h2>Contacts</h2>\n//                 {contacts.map(({id,name,number})=>(\n//                     <CSSTransition \n//                         key={id}\n//                         timeout={2500}\n//                         classNames={styles}\n//                         >\n//                         <ContactsItem \n//                             id={id}\n//                             name={name}\n//                             number={number}\n//                             onRemove={()=>onRemoveContact(id)}\n//                         />\n//                     </CSSTransition>\n//                 ))}\n//         </TransitionGroup>                       \n//     // )\n// )\n// Contacts.propTypes={\n//     id:PropTypes.string,\n//     name:PropTypes.string,\n//     number:PropTypes.string,\n// }\n// Contacts.defaultProps = {\n//     id: '',\n//     name: '',\n//     number: '',\n// }\n// const getVisibleContacts=(allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n//   return allContacts.filter(({name})=>\n//     name.toLowerCase().includes(normalizedFilter),\n//   )\n// }\n// const mapStateToProps =({ contacts: {items, filter}})=> ({\n//     contacts: getVisibleContacts(items, filter),\n// })\n// const mapDispatchToProps = dispatch => ({\n//     onRemoveContact: (id) => dispatch(contactsActions.removeContact(id))\n// })\n// export default connect(mapStateToProps, mapDispatchToProps)(Contacts)\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/components/Contacts/Contacts.js"],"names":["React","ContactsItem","PropTypes","CSSTransition","TransitionGroup","styles","Contacts","contacts","onRemoveContact","map","id","name","number","propTypes","string","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,KAAgC;AAC7C,sBACI,QAAC,eAAD;AACI,IAAA,SAAS,EAAC,IADd;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA,4BAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,EAKSD,QAAQ,CAACE,GAAT,CAAa,CAAC;AAACC,MAAAA,EAAD;AAAIC,MAAAA,IAAJ;AAASC,MAAAA;AAAT,KAAD,kBACV,QAAC,aAAD;AAEI,MAAA,OAAO,EAAE,IAFb;AAGI,MAAA,UAAU,EAAEP,MAHhB;AAAA,6BAKI,QAAC,YAAD;AACI,QAAA,EAAE,EAAEK,EADR;AAEI,QAAA,IAAI,EAAEC,IAFV;AAGI,QAAA,MAAM,EAAEC,MAHZ;AAII,QAAA,QAAQ,EAAE,MAAIJ,eAAe,CAACE,EAAD;AAJjC;AAAA;AAAA;AAAA;AAAA;AALJ,OACSA,EADT;AAAA;AAAA;AAAA;AAAA,YADH,CALT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAvBD;;KAAMJ,Q;AAwBNA,QAAQ,CAACO,SAAT,GAAmB;AACfH,EAAAA,EAAE,EAACR,SAAS,CAACY,MADE;AAEfH,EAAAA,IAAI,EAACT,SAAS,CAACY,MAFA;AAGfF,EAAAA,MAAM,EAACV,SAAS,CAACY;AAHF,CAAnB;AAKAR,QAAQ,CAACS,YAAT,GAAwB;AACpBL,EAAAA,EAAE,EAAE,EADgB;AAEpBC,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,MAAM,EAAE;AAHY,CAAxB;AAKA,eAAeN,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport styles from './Contacts.module.css'\r\n\r\nconst Contacts = ({contacts,onRemoveContact}) => {\r\n    return(\r\n        <TransitionGroup \r\n            component=\"ul\" \r\n            className=\"ContactsList\"\r\n            >\r\n                <h2>Contacts</h2>\r\n                {contacts.map(({id,name,number})=>(\r\n                    <CSSTransition \r\n                        key={id}\r\n                        timeout={2500}\r\n                        classNames={styles}\r\n                        >\r\n                        <ContactsItem \r\n                            id={id}\r\n                            name={name}\r\n                            number={number}\r\n                            onRemove={()=>onRemoveContact(id)}\r\n                        />\r\n                    </CSSTransition>\r\n                ))}\r\n        </TransitionGroup>                       \r\n    )\r\n}\r\nContacts.propTypes={\r\n    id:PropTypes.string,\r\n    name:PropTypes.string,\r\n    number:PropTypes.string,\r\n}\r\nContacts.defaultProps = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n}\r\nexport default Contacts;\r\n\r\n\r\n// import React from 'react';\r\n// import ContactsItem from '../ContactsItem/ContactsItem';\r\n// import PropTypes from 'prop-types'\r\n// import { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n// import styles from './Contacts.module.css'\r\n// import { connect } from 'react-redux';\r\n// import contactsActions from '../../redux/contacts-actions'\r\n\r\n// const Contacts = ({contacts,onRemoveContact}) => (\r\n//     // return(\r\n//         <TransitionGroup \r\n//             component=\"ul\" \r\n//             className=\"ContactsList\"\r\n//             >\r\n//                 <h2>Contacts</h2>\r\n//                 {contacts.map(({id,name,number})=>(\r\n//                     <CSSTransition \r\n//                         key={id}\r\n//                         timeout={2500}\r\n//                         classNames={styles}\r\n//                         >\r\n//                         <ContactsItem \r\n//                             id={id}\r\n//                             name={name}\r\n//                             number={number}\r\n//                             onRemove={()=>onRemoveContact(id)}\r\n//                         />\r\n//                     </CSSTransition>\r\n//                 ))}\r\n//         </TransitionGroup>                       \r\n//     // )\r\n// )\r\n\r\n// Contacts.propTypes={\r\n//     id:PropTypes.string,\r\n//     name:PropTypes.string,\r\n//     number:PropTypes.string,\r\n// }\r\n// Contacts.defaultProps = {\r\n//     id: '',\r\n//     name: '',\r\n//     number: '',\r\n// }\r\n\r\n// const getVisibleContacts=(allContacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return allContacts.filter(({name})=>\r\n//     name.toLowerCase().includes(normalizedFilter),\r\n//   )\r\n// }\r\n\r\n// const mapStateToProps =({ contacts: {items, filter}})=> ({\r\n//     contacts: getVisibleContacts(items, filter),\r\n// })\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     onRemoveContact: (id) => dispatch(contactsActions.removeContact(id))\r\n// })\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Contacts)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}