{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.js\";\nimport React, { Component } from 'react'; // import { v4 as uuidv4 } from 'uuid';\n\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\nimport Notification from '../Notification/Notification';\nimport { CSSTransition } from 'react-transition-group';\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      number: '',\n      message: null\n    };\n\n    this.handleInputChange = evt => {\n      const {\n        name,\n        value\n      } = evt.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.getNoty = note => {\n      this.setState({\n        message: note\n      });\n      setTimeout(() => {\n        this.setState({\n          message: null\n        });\n      }, 2500);\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n\n      if (this.props.contacts.items.find(item => item.name.toLowerCase() === this.state.name.toLowerCase())) {\n        this.getNoty('already exust');\n        return;\n      }\n\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      message\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: message,\n        timeout: 250,\n        classNames: \"notification\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.nameInputId,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleInputChange,\n            id: this.nameInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: this.numberInputId,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            type: \"tel\",\n            name: \"number\",\n            value: this.state.number,\n            onChange: this.handleInputChange,\n            id: this.numberInputId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({\n    name,\n    number,\n    message\n  }) => dispatch(contactsActions.addContact(name, number, message))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","styles","connect","contactsActions","Notification","CSSTransition","ContactForm","state","name","number","message","handleInputChange","evt","value","currentTarget","setState","getNoty","note","setTimeout","handleSubmit","preventDefault","props","contacts","items","find","item","toLowerCase","onSubmit","reset","render","form","label","nameInputId","input","numberInputId","button","mapStateToProps","mapDispatchToProps","dispatch","addContact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts-actions'\r\n\r\nimport Notification from '../Notification/Notification'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n          name: '',\r\n          number: '',\r\n          message: null,   \r\n    }\r\n\r\n    // nameInputId = uuidv4();\r\n    // numberInputId = uuidv4();\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.currentTarget;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    getNoty = (note) => {\r\n      this.setState({message: note});\r\n      setTimeout(()=> {\r\n        this.setState({ message: null});\r\n      }, 2500)\r\n    }\r\n\r\n    handleSubmit=evt=>{\r\n        evt.preventDefault();\r\n\r\n        if (this.props.contacts.items.find((item) => item.name.toLowerCase() === this.state.name.toLowerCase())) {\r\n          this.getNoty('already exust');\r\n          return;\r\n        }\r\n\r\n        this.props.onSubmit(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({name: '', number: '',});\r\n    }\r\n    \r\n    render() {\r\n      const { message }= this.state;\r\n        return (\r\n          <div>\r\n            <CSSTransition\r\n              in={message} \r\n              timeout={250}\r\n              classNames=\"notification\"\r\n              unmountOnExit>\r\n                <Notification />\r\n            </CSSTransition>\r\n            <form \r\n              onSubmit={this.handleSubmit}\r\n              className={styles.form}>\r\n              <label \r\n                className={styles.label}\r\n                htmlFor={this.nameInputId}>\r\n                    Name\r\n                <input \r\n                  className={styles.input}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange}\r\n                  id={this.nameInputId}\r\n                />\r\n              </label>\r\n              <label \r\n              className={styles.label}\r\n              htmlFor={this.numberInputId}>\r\n                  Number\r\n                <input \r\n                  className={styles.input}\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  value={this.state.number}\r\n                  onChange={this.handleInputChange}\r\n                  id={this.numberInputId}\r\n                />\r\n              </label>\r\n              <button \r\n                className={styles.button}\r\n                type=\"submit\" \r\n                onClick={this.handleSubmit}\r\n              >\r\n                Add contact\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({name,number,message}) => dispatch(contactsActions.addContact(name,number,message))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n\r\n"]},"metadata":{},"sourceType":"module"}