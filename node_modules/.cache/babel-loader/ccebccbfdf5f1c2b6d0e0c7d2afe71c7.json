{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\nimport Header from './components/Header/Header.js';\nimport Notification from './components/Notification/Notification';\nimport PropTypes from 'prop-types';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      filter: '',\n      showNoty: false\n    };\n\n    this.addContact = ({\n      name,\n      number\n    }) => {\n      const contact = {\n        id: uuidv4(),\n        name: name,\n        number: number\n      };\n\n      if (this.state.contacts.find(item => item.name === name)) {\n        this.setState({\n          showNoty: true\n        });\n        setTimeout(() => this.setState({\n          showNoty: false\n        }), 3000);\n      } else {\n        this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts]\n        }));\n      }\n    };\n\n    this.removeContact = contactId => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(({\n            id\n          }) => id !== contactId),\n          filter: ''\n        };\n      });\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.formSubmitHandler = data => {\n      console.log(data);\n    };\n\n    this.getVisibleContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n  }\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter,\n      showNoty\n    } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: showNoty,\n        timeout: 250,\n        classNames: \"notification\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onAddContact: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: contacts.length > 1,\n        timeout: 250,\n        classNames: \"container\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          value: filter,\n          onChange: this.changeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: contacts.length > 0,\n        timeout: 250,\n        classNames: \"container\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Contacts, {\n          contacts: visibleContacts,\n          onRemoveContact: this.removeContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.defaultProps = {};\nApp.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  showNoty: PropTypes.bool\n};\nApp.defaultProps = {\n  contacts: [],\n  filter: '',\n  showNoty: false\n};","map":{"version":3,"sources":["D:/projects/GitHub/goit-react-hw-06-phonebook/src/App.js"],"names":["React","Component","v4","uuidv4","ContactForm","Contacts","Filter","CSSTransition","Header","Notification","PropTypes","App","state","contacts","filter","showNoty","addContact","name","number","contact","id","find","item","setState","setTimeout","prevState","removeContact","contactId","changeFilter","e","currentTarget","value","formSubmitHandler","data","console","log","getVisibleContacts","normalizedFilter","toLowerCase","includes","componentDidMount","savedContacts","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","visibleContacts","length","defaultProps","propTypes","array","string","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Contacts from './components/Contacts/Contacts';\r\nimport Filter from './components/Filter/Filter';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport './App.css'\r\nimport Header from './components/Header/Header.js';\r\nimport Notification from './components/Notification/Notification'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class App extends Component {\r\n  static defaultProps = {}\r\n  \r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    showNoty: false,\r\n  }\r\n\r\n  componentDidMount(){\r\n    const savedContacts = localStorage.getItem('contacts');\r\n    if(savedContacts){\r\n      this.setState({\r\n        contacts: JSON.parse(savedContacts),\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(prevState.contacts !==this.state.contacts){\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact=({name, number})=>{\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    if (this.state.contacts.find((item)=>item.name===name)) {\r\n      this.setState({showNoty: true})\r\n        setTimeout(() => this.setState({showNoty: false}), 3000)      \r\n    } else {\r\n      this.setState(prevState=>({\r\n        contacts: [contact, ...prevState.contacts],\r\n      }))\r\n    }\r\n  }    \r\n\r\n  removeContact=contactId=>{\r\n    this.setState(prevState=>{\r\n      return{\r\n          contacts: prevState.contacts.filter(({id})=>id !== contactId),\r\n          filter: '',\r\n      }\r\n    })      \r\n  }\r\n\r\n  changeFilter=e=>{\r\n    this.setState({filter: e.currentTarget.value})\r\n  }\r\n\r\n  formSubmitHandler=data=>{\r\n    console.log(data);\r\n  }\r\n\r\n  getVisibleContacts=()=>{\r\n    const{filter, contacts} = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact=>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {contacts, filter, showNoty}=this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return(\r\n      <div>\r\n        <CSSTransition\r\n          in={showNoty} \r\n          timeout={250}\r\n          classNames=\"notification\"\r\n          unmountOnExit>\r\n            <Notification />\r\n        </CSSTransition>\r\n        <Header />\r\n        <ContactForm \r\n          onAddContact={this.addContact}\r\n        />\r\n        <CSSTransition \r\n          in={contacts.length>1}\r\n          timeout={250}\r\n          classNames=\"container\"\r\n          unmountOnExit>\r\n            <Filter \r\n              value={filter}\r\n              onChange={this.changeFilter}\r\n            />\r\n        </CSSTransition>\r\n        <CSSTransition \r\n          in={contacts.length>0}\r\n          timeout={250}\r\n          classNames=\"container\"\r\n          unmountOnExit>\r\n            <Contacts \r\n              contacts={visibleContacts}\r\n              onRemoveContact={this.removeContact} \r\n            />\r\n        </CSSTransition>       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes={\r\n  contacts:PropTypes.array,\r\n  filter:PropTypes.string,\r\n  showNoty:PropTypes.bool,\r\n}\r\n\r\nApp.defaultProps = {\r\n  contacts: [],\r\n  filter: '',\r\n  showNoty: false,\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}