{"version":3,"sources":["components/ContactsItem/ContactsItem.module.css","components/Notification/Notification.module.css","components/Filter/Filter.module.css","components/Header/Header.module.css","components/Contacts/Contacts.module.css","redux/contacts-actions.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactsItem/ContactsItem.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/Header/Header.js","App.js","reportWebVitals.js","redux/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","message","payload","id","uuidv4","removeContact","changeFilter","Notification","className","styles","notificationContainer","text","ContactForm","state","handleInputChange","evt","currentTarget","value","setState","getNoty","note","setTimeout","handleSubmit","preventDefault","props","contacts","items","find","item","toLowerCase","onSubmit","reset","this","CSSTransition","in","timeout","classNames","unmountOnExit","form","label","htmlFor","nameInputId","input","type","onChange","numberInputId","button","onClick","Component","connect","dispatch","contactsActions","ContactsItem","onRemove","defaultProps","getVisibleContacts","allContacts","filter","normalizedFilter","includes","onRemoveContact","clearFilter","TransitionGroup","component","map","handleRemoveContact","e","target","Header","appear","maintitle","App","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","getDefaultMiddleware","logger","configureStore","reducer","persistReducer","contactsReducer","middleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2a58678a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__Jlpjq\",\"name\":\"ContactsItem_name__2VzKD\",\"button\":\"ContactsItem_button__1nVnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1nVat\",\"notificationContainer\":\"Notification_notificationContainer__5DCGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__BAoAZ\",\"input\":\"Filter_input__3Aef2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"maintitle\":\"Header_maintitle__3iLAh\",\"appear\":\"Header_appear__3znpH\",\"appearActive\":\"Header_appearActive__klgaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Contacts_enter__Efrp7\",\"enterActive\":\"Contacts_enterActive__13HyO\",\"exit\":\"Contacts_exit__Dxolt\",\"exitActive\":\"Contacts_exitActive__2JPuG\"};","import { v4 as uuidv4 } from 'uuid'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nconst addContact = createAction('contacts/Add', (name,number,message) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n        message\r\n    }\r\n}));\r\n\r\nconst removeContact = createAction('contacts/Remove')\r\n\r\nconst changeFilter = createAction('contacts/ChangeFilter');\r\n\r\nexport default { addContact, removeContact, changeFilter }","import React from 'react'\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({message}) => (\r\n    <div className={styles.notificationContainer}>\r\n        <p className={styles.text}>{message}</p>\r\n    </div>\r\n)\r\n\r\nexport default Notification","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts-actions'\r\nimport Notification from '../Notification/Notification'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n          name: '',\r\n          number: '',\r\n          message: null,   \r\n    }\r\n\r\n    handleInputChange=evt=>{\r\n      const {name, value}= evt.currentTarget;\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n    }\r\n\r\n    getNoty = (note) => {\r\n      this.setState({message: note});\r\n      setTimeout(()=> {\r\n        this.setState({ message: null});\r\n      }, 2500)\r\n    }\r\n\r\n    handleSubmit=evt=>{\r\n        const { name, number } = this.state;\r\n        evt.preventDefault();\r\n\r\n        if (this.props.contacts.items.find((item) => item.name.toLowerCase() === this.state.name.toLowerCase())) {\r\n          this.getNoty('This contact is already exist!');\r\n          return;\r\n        }\r\n        \r\n        if (name ===''){\r\n          this.getNoty('Enter the name!');\r\n          return;\r\n        }\r\n\r\n        if (number ===''){\r\n          this.getNoty('Enter the number!');\r\n          return;\r\n        }\r\n\r\n        this.props.onSubmit(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({name: '', number: '',});\r\n    }\r\n    \r\n    render() {\r\n      const { message }= this.state;\r\n        return (\r\n          <div>\r\n            <CSSTransition\r\n              in={message} \r\n              timeout={250}\r\n              classNames=\"notification\"\r\n              unmountOnExit>\r\n                <Notification message={this.state.message}/>\r\n            </CSSTransition>\r\n            <form \r\n              onSubmit={this.handleSubmit}\r\n              className={styles.form}>\r\n              <label \r\n                className={styles.label}\r\n                htmlFor={this.nameInputId}>\r\n                    Name\r\n                <input \r\n                  className={styles.input}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleInputChange}\r\n                  id={this.nameInputId}\r\n                />\r\n              </label>\r\n              <label \r\n              className={styles.label}\r\n              htmlFor={this.numberInputId}>\r\n                  Number\r\n                <input \r\n                  className={styles.input}\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  value={this.state.number}\r\n                  onChange={this.handleInputChange}\r\n                  id={this.numberInputId}\r\n                />\r\n              </label>\r\n              <button \r\n                className={styles.button}\r\n                type=\"submit\" \r\n                onClick={this.handleSubmit}\r\n              >\r\n                Add contact\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({name,number,message}) => dispatch(contactsActions.addContact(name,number,message))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n\r\n","import React from 'react';\r\nimport styles from './ContactsItem.module.css';\r\nimport PropTypes from 'prop-types'\r\n// import styles from './Contacts.module.css'\r\n\r\nconst ContactsItem = ({name, number, onRemove})=>(\r\n    <li \r\n    className={styles.item}\r\n    >\r\n        <p \r\n        className={styles.name}>\r\n            {name}-{number}</p>\r\n        <button \r\n            className={styles.button}\r\n            onClick={onRemove}> \r\n            Delete\r\n        </button>\r\n    </li>  \r\n) \r\nContactsItem.propTypes={\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n}\r\nContactsItem.defaultProps = {\r\n   name: '',\r\n   number: '',\r\n}\r\nexport default ContactsItem;\r\n    \r\n","import React from 'react';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport styles from './Contacts.module.css'\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts-actions'\r\n\r\nconst Contacts = ({contacts,onRemoveContact,clearFilter}) => {\r\n    \r\n    const handleRemoveContact = id => {\r\n        onRemoveContact(id);\r\n        clearFilter()\r\n    }\r\n\r\n    return(\r\n        <TransitionGroup \r\n            component=\"ul\" \r\n            className=\"ContactsList\"\r\n            >\r\n                <h2>Contacts</h2>\r\n                {contacts.map(({id,name,number})=>(\r\n                    <CSSTransition \r\n                        key={id}\r\n                        timeout={2500}\r\n                        classNames={styles}\r\n                        >\r\n                        <ContactsItem \r\n                            id={id}\r\n                            name={name}\r\n                            number={number}\r\n                            onRemove={()=>handleRemoveContact(id)}\r\n                        />\r\n                    </CSSTransition>                   \r\n                ))}\r\n        </TransitionGroup>                       \r\n    )\r\n}\r\nContacts.propTypes={\r\n    id:PropTypes.string,\r\n    name:PropTypes.string,\r\n    number:PropTypes.string,\r\n}\r\n\r\nconst getVisibleContacts=(allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({name})=>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  )\r\n}\r\n\r\nconst mapStateToProps =({ contacts: { items, filter } })=> ({\r\n    contacts: getVisibleContacts(items, filter),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onRemoveContact: (id) => dispatch(contactsActions.removeContact(id)),\r\n    clearFilter:() => dispatch(contactsActions.changeFilter(''))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts)","import React from 'react'\r\nimport styles from './Filter.module.css'\r\nimport { connect } from 'react-redux'\r\nimport contactsActions from '../../redux/contacts-actions'\r\n\r\nconst Filter =({value, onChange})=>{\r\n    return(\r\n        <label\r\n            className={styles.label}\r\n        >\r\n        Find contacts by name:\r\n            <input \r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}   \r\n                onChange={onChange} \r\n            />                    \r\n        </label>\r\n    ) \r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n    \r\n\r\n  \r\n","import React from 'react'\r\nimport styles from './Header.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Header = () => (\r\n    <CSSTransition \r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={styles}>\r\n        <header>\r\n            <h1 className={styles.maintitle}>Phonebook</h1>\r\n        </header>\r\n    </CSSTransition>\r\n)\r\n\r\nexport default Header","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Contacts from './components/Contacts/Contacts';\r\nimport Filter from './components/Filter/Filter';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport './App.css'\r\nimport Header from './components/Header/Header.js';\r\nimport { connect } from 'react-redux';\r\n\r\nclass App extends Component {  \r\n  render() {\r\n    return(\r\n      <div>\r\n        <Header />\r\n        <ContactForm />\r\n        <CSSTransition \r\n          in={this.props.contacts.length>1}\r\n          timeout={250}\r\n          classNames=\"container\"\r\n          unmountOnExit>\r\n            <Filter/>\r\n        </CSSTransition>\r\n        <CSSTransition \r\n          in={this.props.contacts.length>0}\r\n          timeout={250}\r\n          classNames=\"container\"\r\n          unmountOnExit>\r\n            <Contacts />\r\n        </CSSTransition>       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(App)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport actions from './contacts-actions'\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state,{ payload }) => [...state, payload],\r\n    [actions.removeContact]: (state,{ payload }) => state.filter(({id})=>id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload, \r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts-reducer'\r\nimport logger from 'redux-logger'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n  } from 'redux-persist'\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n}\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger]\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n    },\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        }\r\n      }),\r\n    devTools: process.env.NODE_ENV ==='development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n       <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3AxyV\",\"input\":\"ContactForm_input__3URwQ\",\"button\":\"ContactForm_button__Z634d\",\"form\":\"ContactForm_form__30C7H\"};"],"sourceRoot":""}